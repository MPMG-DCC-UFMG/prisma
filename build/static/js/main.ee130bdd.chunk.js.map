{"version":3,"sources":["services/fixPath.js","services/urlBuilder/urlBuilder.js","services/apiRequestService.js","services/urlBuilder/userUrlBuilder.js","reducers/users.jsx","templates/VerticalCenter/index.jsx","services/urlBuilder/loginUrlBuilder.js","pages/Login/index.jsx","components/atoms/Icon/index.jsx","services/colorService.js","components/atoms/Card/index.jsx","components/molecules/Card/index.jsx","services/urlBuilder/uploadUrlBuilder.js","components/organisms/FormInput/index.js","components/organisms/FormBuilder/index.jsx","pages/Register/index.jsx","components/atoms/Label/index.jsx","components/molecules/ListItem/index.jsx","components/atoms/UserRole/index.jsx","components/atoms/AudioRevisionsCount/index.jsx","components/molecules/AudioTranscriptionCard/index.jsx","components/molecules/EntityDetectionCard/index.jsx","components/molecules/ParaphraseCard/index.jsx","services/urlBuilder/caseUrlBuilder.js","reducers/cases.jsx","assets/logo.svg","components/atoms/Avatar/index.jsx","components/molecules/LoggedUser/index.jsx","components/organisms/Header/index.jsx","components/organisms/Subheader/index.jsx","components/organisms/Content/index.jsx","templates/HeaderContent/index.jsx","templates/CaseHeaderContent/index.jsx","pages/Case/Detail/index.jsx","components/molecules/EntityDetectionSentenceMenu/index.jsx","pages/EntityDetection/Annotations/index.jsx","templates/HeaderForm/index.jsx","pages/EntityDetection/Import/index.jsx","pages/EntityDetection/Entities/List/index.jsx","pages/EntityDetection/Entities/Form/index.jsx","components/atoms/AudioPlayer/index.jsx","utils/baseUrls.js","reducers/audioTranscription.jsx","components/organisms/AudioTranscriptionRevisionForm/index.jsx","components/organisms/AudioTranscriptionRevision/index.jsx","utils/utils.js","components/atoms/If/index.jsx","components/organisms/AudioTranscriptionSegmentEdit/index.jsx","components/organisms/AudioTranscriptionSegment/index.jsx","components/organisms/AudioTranscriptionSegmentForm/index.jsx","components/organisms/AudioTranscriptionModal/index.jsx","pages/AudioTranscription/View/index.jsx","components/molecules/AudioTranscriptionAnnotation/index.jsx","pages/Paraphrase/index.jsx","reducers/store.jsx","pages/Crud/CrudForm.jsx","components/atoms/CrudListButton/index.jsx","pages/Crud/CrudList.jsx","pages/Register/success.jsx","pages/Case/AddUser/index.jsx","components/molecules/CardButton/index.jsx","components/molecules/CaseCard/index.jsx","components/atoms/NotAdmin/index.jsx","pages/Case/List/index.jsx","pages/User/AddCase/index.jsx","pages/AudioTranscription/AddFiles/index.jsx","pages/AudioTranscription/Export/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["FixPath","path","params","id","key","replace","UrlBuilder","_url","HOST","process","this","setUrl","url","prefix","value","substr","appendPrefix","ApiRequest","baseUrl","fix","get","console","log","token","sessionStorage","setItem","removeItem","getItem","headers","axios","data","post","put","delete","head","method","UserUrlBuilder","_userId","fetchUser","createAsyncThunk","a","me","response","userSlice","createSlice","name","initialState","reducers","setUser","state","action","payload","extraReducers","builder","addCase","fulfilled","actions","VerticalCenter","props","className","children","LoginUrlBuilder","Login","useState","mounted","setMounted","loading","setLoading","dispatch","useSelector","user","useDispatch","history","useHistory","useEffect","onFinish","values","tokenData","setToken","access_token","loadUserData","error","message","title","icon","labelCol","span","wrapperCol","initialValues","remember","Item","label","rules","required","type","Password","disabled","htmlType","block","to","Icon","getStyle","style","color","join","ColorService","colorName","colors","red","orange","volcano","gold","yellow","lime","green","cyan","blue","geekblue","purple","magenta","grey","primary","CardTitle","backgroundColor","getColor","menu","overlay","onClick","e","preventDefault","CardContent","Card","UploadUrlBuilder","FormInput","Fragment","field","valuePropName","getValuePropName","initialValue","defaultValue","TextArea","rows","autoSize","options","map","option","Option","showSearch","filterOption","input","toLowerCase","indexOf","icons","text","getField","FormBuilder","formData","editing","Form","useForm","form","useParams","baseRoute","create","save","edit","request","success","goBack","loadData","setFieldsValue","push","pathAfterSave","editTitle","createTitle","file","fileList","fields","filter","hideOnEditing","formFields","Register","minWidth","registerForm","Label","ListItem","link","extra","Meta","UserRole","userId","roles","currentUser","isUser","hasRole","includes","role","AudioRevisionsCount","revisions","length","opacity","AudioTranscriptionCard","currentCase","linkTo","item","user_id","setData","withCaseId","withAudioTranscriptionId","description","footer","dataSource","renderItem","size","EntityDetectionCard","image","ParaphraseCard","target","rel","href","CaseUrlBuilder","append","fetchCases","fetchCaseById","withId","deleteCaseById","setCase","caseList","UserAvatar","tooltip","stringToHslColor","s","l","hash","i","charCodeAt","renderAvatar","split","word","slice","LoggedUser","removeToken","trigger","Header","src","Logo","alt","SubHeader","extras","Content","HeaderContent","subtitle","CaseHeaderContent","projectId","case","nl2br","users","Group","CaseDetail","open","has_audio_transcription","has_entities_detection","has_paraphrases","EntityDetectionSentenceMenu","EntityDetectionAnnotation","percent","showInfo","HeaderForm","setValues","onValuesChange","changed","hideOnCreating","showIf","conditions","EntityDetectionImport","formTitle","EntityDetectionEntities","columns","dataIndex","render","record","EntityDetectionEntitiesForm","AudioPlayer","audioFile","exists","setExists","checkExist","then","res","catch","setTimeout","controls","controlsList","allowDownload","BaseUrls","USERS","PROJECTS","PROJECT","USER","PROJECT_USER","AUDIO_PAGE_VIEW","AUDIO_TRANSCRIPTION_UPLOAD","AUDIO_TRANSCRIPTION_EXPORT","AUDIO_TRANSCRIPTION","AUDIO_TRANSCRIPTION_SEGMENT","AUDIO_TRANSCRIPTION_SEGMENT_EDIT","AUDIO_TRANSCRIPTION_SEGMENT_REVISION_CREATE","AUDIO_TRANSCRIPTION_SEGMENT_REVISION_UPDATE","fetchAudioTranscription","AudioTranscriptionRevisionForm","urlParams","audioTranscriptionId","segmentId","segment","addRevision","resetFields","layout","revision","onKeyDown","ev","ctrlKey","keyCode","submit","placeholder","onCancel","AudioTranscriptionRevision","deleteItem","approveItem","approved","avatar","author","content","datetime","Date","createdAt","toLocaleString","onConfirm","okText","cancelText","removeButton","onEdit","editButton","onDuplicate","duplicateButton","Utils","If","condition","AudioTranscriptionSegmentEdit","start_time","end_time","orientation","secondsToMinutes","onChange","onChangeSlider","range","max","total_time","AudioTranscriptionSegment","showForm","setShowForm","showEditForm","setShowEditForm","formInitialValue","setFormInitialValue","editRevisionData","setEditRevisionData","currentAudio","audioTranscription","cancelTranscription","editRevision","duplicateRevision","deleteSegment","full_audio","danger","seconds","format","val","Math","floor","hours","minutes","AudioTranscriptionSegmentForm","audio","baseData","segments","itemLayout","index","width","display","newData","JSON","parse","stringify","splice","removeSegment","newSlider","interval","parseFloat","window","prompt","start","min","showSegmentForm","AudioTranscriptionModal","forwardRef","ref","visible","setVisible","React","confirmLoading","setConfirmLoading","selectedRows","setSelectedRows","useImperativeHandle","showModal","handleOk","segment_ids","reduce","r","rowSelection","_selectedRowKeys","_selectedRows","getCheckboxProps","onOk","d","is_merge","pagination","AudioTranscription","setShowSegmentForm","audios","setAudios","mergeModalRef","useRef","loadAudios","getSegments","getMerges","getFullAudio","find","getMergeTimes","changeAudioSpeed","vel","nextAudio","prevAudio","document","getElementsByTagName","playbackRate","addEventListener","removeEventListener","findLinksIndex","fixAudioLink","caseId","project_id","audioId","findIndex","current","Panel","header","merge_data","AudioTranscriptionAnnotation","Paraphrase","configureStore","reducer","userReducer","caseReducer","audioTranscriptionReducer","CrudForm","CrudListButton","tip","postData","onReload","show","conditional","CrudList","setDataSource","setColumns","loadColumns","additionalButtons","buttons","list","includeButtons","forEach","button","showInTable","renderCel","includeColumns","c","component","listComponents","listTitle","registerPathSuffix","registerLabel","singularName","RegisterSuccess","status","subTitle","CaseAddUser","setOptions","param","opt","loadAllUsers","addUser","removeUser","labelInValue","_","differenceBy","isEnabled","feature","viewCase","count","maxCount","NotAdmin","CaseList","el","UserAddCase","setCurrentUser","loadCurrentUser","loadAllProjects","projects","intersectionBy","some","project","Step","Steps","removeFileNameExt","findTxt","filename","mapTxt","SelectFiles","accept","multiple","info","setFiles","txt","setFilesTxt","InboxOutlined","FilesForm","files","filesTxt","f","handleFileName","handleTxt","AudioTranscriptionAddFiles","sending","setSending","currentStep","setCurrentStep","handleVisibility","sendFiles","stepsLength","AudioTranscriptionExport","zip","createElement","download","click","Routes","store","crudRoutes","exact","userForm","caseForm","audioTranscriptionForm","AppWrapper","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ee130bdd.chunk.js","sourcesContent":["export class FixPath {\r\n\r\n    static fix(path, params, id = null) {\r\n        for(let key in params) {\r\n            path = path.replace(':'+key, params[key]);\r\n        }\r\n\r\n        if(id)\r\n            path = path.replace(':id', id);\r\n\r\n        return path;\r\n    }\r\n    \r\n}","\r\nexport class UrlBuilder {\r\n\r\n    HOST = process.env.REACT_APP_HOST;\r\n    url;\r\n\r\n    constructor (_url = \"\") {\r\n        this.setUrl(_url);\r\n    }\r\n\r\n    setUrl(_url) {\r\n        this.url = _url;\r\n    }\r\n\r\n    appendPrefix(prefix, value) {\r\n        if(!this.url === \"\" || this.url.substr(-1) !== \"/\")\r\n            this.url += \"/\";\r\n        this.url += `${prefix}/${value}`;\r\n    }\r\n\r\n    append(value) {\r\n        this.url += `/${value}`;\r\n    }\r\n\r\n    withCaseId(id) {\r\n        this.appendPrefix(\"project\", id);\r\n        return this;\r\n    }\r\n\r\n    withAudioTranscriptionId(id) {\r\n        this.appendPrefix(\"audio_transcription\", id);\r\n        return this;\r\n    }\r\n\r\n    get() {\r\n        return this.HOST + this.url;\r\n    }\r\n\r\n}","import axios from \"axios\";\r\nimport { FixPath } from \"./fixPath\";\r\nimport { UrlBuilder } from \"./urlBuilder/urlBuilder\";\r\n\r\nexport class ApiRequest {\r\n\r\n    url = \"\";\r\n\r\n    static setUrl(baseUrl, params, id = null) {\r\n        this.url = new UrlBuilder(\r\n                    FixPath.fix(baseUrl, params, id)\r\n                ).get();\r\n                console.log(this.url);\r\n        return this;\r\n    }\r\n\r\n    static setToken(token) {\r\n        if(token)\r\n            sessionStorage.setItem('access_token', token);\r\n    }\r\n\r\n    static removeToken() {\r\n        sessionStorage.removeItem('access_token');\r\n    }\r\n\r\n    static get token() {\r\n        return sessionStorage.getItem('access_token');\r\n    }\r\n\r\n    static get headers() {\r\n        let headers = {};\r\n\r\n        if(this.token)\r\n            headers['Authorization'] = `Bearer ${this.token}`;\r\n\r\n        return headers;\r\n    }\r\n    \r\n    static async get(url) {\r\n        if(!url) url = this.url;\r\n        return (await axios.get(url, {\r\n            headers: this.headers\r\n        })).data;\r\n    }\r\n\r\n    static async post(url, data) {\r\n        if(!url) url = this.url;\r\n        return (await axios.post(url, data, {\r\n            headers: this.headers\r\n        })).data;\r\n    }\r\n\r\n    static async put(url, data) {\r\n        if(!url) url = this.url;\r\n        return (await axios.put(url, data, {\r\n            headers: this.headers\r\n        })).data;\r\n    }\r\n\r\n    static async delete(url) {\r\n        if(!url) url = this.url;\r\n        return (await axios.delete(url, {\r\n            headers: this.headers\r\n        })).data;\r\n    }\r\n\r\n    static async head(url) {\r\n        if(!url) url = this.url;\r\n        return (await axios.head(url, {\r\n            headers: this.headers\r\n        })).data;\r\n    }\r\n\r\n    static async request(url, method, data) {\r\n        if(!url) url = this.url;\r\n        return (await axios({\r\n            method,\r\n            url,\r\n            data,\r\n            headers: this.headers\r\n        })).data;\r\n    }\r\n}","import { UrlBuilder } from \"./urlBuilder\";\r\n\r\nexport class UserUrlBuilder extends UrlBuilder {\r\n\r\n    constructor() {\r\n        super(\"user\");\r\n    }\r\n\r\n    withUserId(_userId) {\r\n        this.setUrl(\"user/\"+_userId);\r\n        return this;\r\n    }\r\n\r\n    me() {\r\n        this.setUrl(\"user/me\");\r\n        return this;\r\n    }\r\n\r\n}","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport { ApiRequest } from '../services/apiRequestService'\r\nimport { UserUrlBuilder } from '../services/urlBuilder/userUrlBuilder'\r\n\r\nexport const fetchUser = createAsyncThunk(\r\n  'user/fetchUser',\r\n  async () => {\r\n    const response = await ApiRequest.get( new UserUrlBuilder().me().get() );\r\n    return response\r\n  }\r\n)\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n  },\r\n  reducers: {\r\n    setUser: (state, action) => {\r\n      state.data = action.payload\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchUser.fulfilled, (state, action) => {\r\n      state.data = action.payload\r\n    })\r\n  }\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { setUser } = userSlice.actions\r\n\r\nexport default userSlice.reducer","import React from 'react';\r\n\r\nexport default function VerticalCenter (props) {\r\n\r\n    return (\r\n        <div id=\"structure\" className=\"App center\">\r\n            { props.children }\r\n        </div>\r\n    );\r\n\r\n}","import { UrlBuilder } from \"./urlBuilder\";\r\n\r\nexport class LoginUrlBuilder extends UrlBuilder {\r\n\r\n    constructor() {\r\n        super(\"login\");\r\n    }\r\n\r\n}","import { Card } from 'antd';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchUser } from '../../reducers/users';\r\nimport VerticalCenter from '../../templates/VerticalCenter';\r\nimport { Form, Button, Divider, Input, message, Spin } from 'antd';\r\nimport { ApiRequest } from '../../services/apiRequestService';\r\nimport { LoginUrlBuilder } from '../../services/urlBuilder/loginUrlBuilder';\r\nimport { useHistory } from 'react-router';\r\nimport './login.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Login (props) {\r\n\r\n    const [mounted, setMounted] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const user = useSelector(state => state.user.data)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        setMounted(true);\r\n        if(ApiRequest.token)\r\n            history.replace(\"/home\");\r\n    }, mounted);\r\n\r\n    const onFinish = async (values) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            let tokenData = await ApiRequest.post( new LoginUrlBuilder().get(), values );\r\n            ApiRequest.setToken(tokenData.access_token);\r\n            loadUserData();\r\n            setLoading(false);\r\n        } catch(error) {\r\n            console.error(error.response.data.error);\r\n            message.error(error.response.data.error, 5);\r\n            setLoading(false);\r\n        };\r\n    };\r\n\r\n    const loadUserData = async () => {\r\n        try {\r\n            dispatch(fetchUser());\r\n            history.replace(\"/home\");\r\n        } catch {\r\n            message.error(\"Não foi possível recuperar os dados do usuário\", 5);\r\n        }\r\n        setLoading(false);\r\n    }\r\n    \r\n    return (\r\n        <VerticalCenter>\r\n            <div className=\"login-form\">\r\n                <h2>Software de Anotação</h2>\r\n                <Card title=\"Entrar\" icon=\"lock\">\r\n                    <Form\r\n                        name=\"basic\"\r\n                        labelCol={{ span: 8 }}\r\n                        wrapperCol={{ span: 16 }}\r\n                        initialValues={{ remember: true }}\r\n                        onFinish={onFinish}\r\n                    >\r\n\r\n                        <Form.Item\r\n                            label=\"E-mail\"\r\n                            name=\"email\"\r\n                            rules={[\r\n                                { required: true, message: 'Digite o seu e-mail' },\r\n                                { type: 'email', message: 'E-mail inválido' }\r\n                            ]}\r\n                            >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"Senha\"\r\n                            name=\"password\"\r\n                            rules={[{ required: true, message: 'Digite a sua senha' }]}\r\n                            >\r\n                            <Input.Password />\r\n                        </Form.Item>\r\n\r\n                        <Divider />\r\n\r\n                        <Form.Item wrapperCol={{ span: 24 }} className=\"ta-c\">\r\n                            <Button disabled={ loading } type=\"primary\" htmlType=\"submit\" block>\r\n                                { loading ? <Spin /> : \"Entrar\" }\r\n                            </Button>\r\n                        </Form.Item>\r\n\r\n                    </Form>\r\n\r\n                    <Link to=\"/register\">\r\n                        <Button type=\"ghost\" block>\r\n                            Cadastrar\r\n                        </Button>\r\n                    </Link>\r\n                </Card>\r\n            </div> \r\n        </VerticalCenter>\r\n    );\r\n\r\n}","import React from 'react';\r\n\r\nexport default function Icon(props) {\r\n\r\n    function getStyle() {\r\n        switch(props.style){\r\n            case \"brand\":\r\n                return 'fab';\r\n                break;\r\n            case \"regular\":\r\n                return 'far';\r\n                break;\r\n            case \"light\":\r\n                return 'fal'\r\n                break;\r\n            default:\r\n                return 'fas'\r\n                break;\r\n        }\r\n    }\r\n\r\n    function getColor() {\r\n        return props.color ? `color-${props.color}` : '';\r\n    }\r\n\r\n    function getClasses() {\r\n        return [getStyle(), 'fa-'+props.icon, getColor()].join(\" \");\r\n    };\r\n\r\n    return (\r\n        <i className={ getClasses() }></i>\r\n    )\r\n}","import { red, orange, volcano, gold, yellow, lime, green, cyan, blue, geekblue, purple, magenta, grey } from '@ant-design/colors';\r\n\r\nexport class ColorService {\r\n\r\n    static getColor(colorName) {\r\n        const colors = {\r\n            red: red,\r\n            orange: orange,\r\n            volcano: volcano,\r\n            gold: gold,\r\n            yellow: yellow,\r\n            lime: lime,\r\n            green: green,\r\n            cyan: cyan,\r\n            blue: blue,\r\n            geekblue: geekblue,\r\n            purple: purple,\r\n            magenta: magenta,\r\n            grey: grey\r\n        }\r\n\r\n        return colors[colorName] ? colors[colorName].primary : colors.grey.primary;\r\n    }\r\n\r\n}","import React from 'react';\r\nimport Icon from '../Icon';\r\nimport { Dropdown } from 'antd';\r\nimport { ColorService } from '../../../services/colorService';\r\n\r\nexport function CardTitle (props) {\r\n\r\n    return (\r\n        <div className=\"card-title\" style={ { backgroundColor: ColorService.getColor(props.color) } }>\r\n\r\n            { props.menu ? <div className=\"fl-r\">\r\n                <Dropdown overlay={props.menu}>\r\n                    <a onClick={e => e.preventDefault()}>\r\n                        <Icon icon=\"ellipsis-v\" />\r\n                    </a>\r\n                </Dropdown>\r\n            </div> : null }\r\n\r\n            <div className=\"truncate\" onClick={props.onClick}>\r\n                <Icon icon={props.icon} />\r\n                {props.title}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function CardContent (props) {\r\n    return (\r\n        <div className=\"card-content\" onClick={props.onClick}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { CardContent, CardTitle } from '../../atoms/Card'\r\n\r\nexport default function Card (props) {\r\n    return (\r\n        <div className=\"card\">\r\n            <CardTitle title={props.title} icon={props.icon} />\r\n            <CardContent>\r\n                {props.children}\r\n            </CardContent>\r\n        </div>\r\n    );\r\n}","import { UrlBuilder } from \"./urlBuilder\";\r\n\r\nexport class UploadUrlBuilder extends UrlBuilder {\r\n\r\n    constructor() {\r\n        super(\"upload\");\r\n    }\r\n\r\n\r\n}","import React from 'react';\r\nimport { Alert, Form, Input, Switch, Select, Badge, Upload, Button } from 'antd';\r\nimport Icon from '../../atoms/Icon';\r\nimport icons from '../../../data/icons.json';\r\nimport colors from '../../../data/colors.json';\r\nimport { UploadUrlBuilder } from '../../../services/urlBuilder/uploadUrlBuilder';\r\nimport { ApiRequest } from '../../../services/apiRequestService';\r\n\r\nexport default function FormInput (props) {\r\n\r\n    const getField = () => {\r\n        switch (props.field.type) {\r\n\r\n            case \"input\":\r\n                return (\r\n                    <Input />\r\n                )\r\n\r\n            case \"password\":\r\n                return (\r\n                    <Input.Password />\r\n                )\r\n\r\n            case \"textarea\":\r\n                return (\r\n                    <Input.TextArea rows={props.field.rows || 5} autoSize={props.field.autoSize || true} />\r\n                )\r\n\r\n            case \"switch\":\r\n                return (\r\n                    <Switch />\r\n                )\r\n\r\n            case \"select\":\r\n                return (\r\n                    <Select>\r\n                        { props.field.options.map(option => (\r\n                            <Select.Option value={option.key}>{option.value}</Select.Option>\r\n                        ))}\r\n                    </Select>\r\n                )\r\n\r\n            case \"icon-select\":\r\n                return (\r\n                    <Select\r\n                        showSearch={true}\r\n                        filterOption={(input, option) =>\r\n                            option.value.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                    >\r\n                        { icons.map(icon => (\r\n                            <Select.Option value={icon}><Icon icon={icon} /> {icon}</Select.Option>\r\n                        ))}\r\n                    </Select>\r\n                )\r\n\r\n            case \"color-select\":\r\n                return (\r\n                    <Select\r\n                        showSearch={true}\r\n                        filterOption={(input, option) =>\r\n                            option.value.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                            }\r\n                    >\r\n                        { colors.map(color => (\r\n                            <Select.Option value={color}><Badge color={color} text={color} /></Select.Option>\r\n                        ))}\r\n                    </Select>\r\n                )\r\n\r\n            case \"upload\":\r\n                return (\r\n                    <Upload \r\n                        action={new UploadUrlBuilder().get()} \r\n                        headers={ ApiRequest.headers }\r\n                        {...props}>\r\n                        <Button icon={<Icon icon=\"upload\" />}> Anexar arquivo</Button>\r\n                    </Upload>\r\n                )\r\n\r\n            default:\r\n                return ( <Alert message={`Campo do tipo ${props.field.type} não configurado`} type=\"error\" /> )\r\n\r\n        }\r\n    }\r\n\r\n    const getValuePropName = () => {\r\n        switch (props.field.type) {\r\n            case \"switch\":\r\n                return \"checked\";\r\n            default:\r\n                return \"value\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Form.Item\r\n                label={props.field.label}\r\n                name={props.field.name}\r\n                rules={props.field.rules}\r\n                valuePropName={getValuePropName()}\r\n                initialValue={props.field.defaultValue}\r\n            >\r\n                { getField() }\r\n            </Form.Item>\r\n        </React.Fragment>\r\n    );\r\n\r\n}","import React, { useState } from 'react';\r\nimport Card from '../../molecules/Card';\r\nimport { Form, Button, Divider, message, Spin } from 'antd';\r\nimport FormInput from '../FormInput';\r\nimport { UrlBuilder } from '../../../services/urlBuilder/urlBuilder';\r\nimport { ApiRequest } from '../../../services/apiRequestService';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { FixPath } from '../../../services/fixPath';\r\n\r\nexport default function FormBuilder (props) {\r\n\r\n    const { formData, editing } = props;\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n    const [form] = Form.useForm();\r\n    const { id } = useParams();\r\n    const params = useParams();\r\n\r\n    const baseUrl = () => {\r\n        let url = new UrlBuilder(formData.baseRoute).get();\r\n        return FixPath.fix(url, params);\r\n    }\r\n\r\n    const onFinish = (values) => {\r\n\r\n        if(values.file)\r\n            values.file = values.file.fileList[0].response.url;\r\n\r\n        if(editing)\r\n            edit(values);\r\n        else \r\n            create(values);\r\n\r\n    };\r\n\r\n    const create = (data) => {\r\n        save(baseUrl(), \"post\", data);\r\n    }\r\n\r\n    const edit = (data) => {\r\n        save(baseUrl()+id, \"put\", data);\r\n    }\r\n\r\n    const save = async (url, method, data) => {\r\n        setLoading(true);\r\n        try {\r\n            const result = await ApiRequest.request(\r\n                    url,\r\n                    method,\r\n                    data\r\n                );\r\n            message.success(editing ? \"Edição realizada com sucesso\" : \"Cadastro realizado com sucesso\", 5);\r\n            goBack();\r\n        } catch {\r\n            message.error(\"Não foi possível salvar. Verifique os dados e tente novamente\", 5);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    const loadData = async () => {\r\n        if(editing) {\r\n            console.log(id);\r\n            const data = await ApiRequest.get(baseUrl()+id);\r\n            form.setFieldsValue(data);\r\n        }\r\n    }\r\n\r\n    const goBack = () => {\r\n        history.push( formData.pathAfterSave ? FixPath.fix(formData.pathAfterSave, params) : `/${FixPath.fix(formData.path, params)}`);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadData();\r\n    }, [])\r\n\r\n    const formFields = () => {\r\n        let fields = formData.form;\r\n\r\n        if(editing)\r\n            fields = fields.filter(field => !field.hideOnEditing);\r\n\r\n        return fields;\r\n    }\r\n\r\n    return (\r\n        <Card title={ editing ? formData.editTitle : formData.createTitle } icon=\"edit\">\r\n            <Form\r\n                form={form}\r\n                name=\"basic\"\r\n                labelCol={{ span: 8 }}\r\n                wrapperCol={{ span: 16 }}\r\n                onFinish={onFinish}\r\n            >\r\n\r\n                { formFields().map( field => <FormInput field={field} form={form} /> )}\r\n\r\n                <Divider />\r\n\r\n                <Form.Item wrapperCol={{ span: 24 }} className=\"ta-c\">\r\n                    <Button disabled={ loading } type=\"primary\" htmlType=\"submit\">\r\n                    { loading ? <Spin /> : \"Salvar\" }\r\n                    </Button>\r\n                    <Button className=\"ml-4\" type=\"link\" onClick={goBack}>Cancelar</Button>\r\n                </Form.Item>\r\n\r\n            </Form>\r\n        </Card>\r\n    );\r\n\r\n}","import React from 'react';\r\nimport FormBuilder from '../../components/organisms/FormBuilder';\r\nimport VerticalCenter from '../../templates/VerticalCenter';\r\nimport registerForm from '../../data/form/register.json';\r\n\r\nexport default function Register (props) {\r\n\r\n    return (\r\n        <VerticalCenter>\r\n            <div style={{ minWidth: 500 }}>\r\n                <FormBuilder formData={registerForm} />\r\n            </div>\r\n        </VerticalCenter>\r\n    );\r\n\r\n}","import React from 'react';\r\n\r\nexport default function Label(props) {\r\n\r\n    return (\r\n        <h4>{props.children}</h4>\r\n    )\r\n    \r\n}","import React from 'react';\r\nimport { List, Tag } from 'antd';\r\nimport Icon from '../../atoms/Icon';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function ListItem (props) {\r\n\r\n    const {link, name} = props;\r\n\r\n    return (<List.Item extra={props.extra}>\r\n            <List.Item.Meta\r\n                title={<Link to={link}>{name}</Link>}\r\n                />\r\n        </List.Item>\r\n    );\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function UserRole (props) {\r\n\r\n    const { userId, roles } = props;\r\n    const currentUser = useSelector(state => state.user.data);\r\n\r\n    const isUser = () => userId && currentUser && currentUser.id===userId;\r\n    const hasRole = () => currentUser && roles && roles.includes(currentUser.role);\r\n\r\n    const userAndRole = () => {\r\n        if(userId && roles) {\r\n            return isUser() || hasRole();\r\n        } else if(userId) {\r\n            return isUser();\r\n        } else if(roles) {\r\n            return hasRole()\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return (<>\r\n        { userAndRole() ? props.children : null }\r\n    </>);\r\n}","import { Tooltip } from 'antd';\r\nimport React from 'react';\r\nimport Icon from '../Icon';\r\n\r\nexport default function AudioRevisionsCount(props) {\r\n\r\n    return (\r\n        <Tooltip title={props.data.revisions.length+\" revisões\"}>\r\n            <span style={{ opacity: props.data.revisions.length>0 ? 1 : .2 }}>\r\n                <Icon icon=\"file-signature\" />\r\n            </span>\r\n        </Tooltip>\r\n    )\r\n}","import React from 'react';\r\nimport { CardContent, CardTitle } from '../../atoms/Card'\r\nimport { Button, Empty, List, Menu, Spin } from 'antd';\r\nimport ListItem from '../ListItem';\r\nimport { Link } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { ApiRequest } from '../../../services/apiRequestService';\r\nimport { UrlBuilder } from '../../../services/urlBuilder/urlBuilder';\r\nimport { useEffect } from 'react';\r\nimport UserRole from '../../atoms/UserRole';\r\nimport Icon from '../../atoms/Icon';\r\nimport AudioRevisionsCount from '../../atoms/AudioRevisionsCount';\r\n\r\nexport default function AudioTranscriptionCard (props) {\r\n\r\n  const { currentCase } = props;\r\n  const baseUrl = `/case/${currentCase.id}/audio-transcription/`;\r\n\r\n  const linkTo = (item) => baseUrl+item.id+\"/view\";\r\n\r\n  const menu = (\r\n      <Menu>\r\n        <UserRole roles={['root']} userId={currentCase.user_id}>\r\n          <Menu.Item key=\"0\">\r\n            <Link to={ baseUrl+'addFiles' }>\r\n              Adicionar novo(s) arquivo(s)\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\">\r\n            <Link to={ baseUrl+'export' }>\r\n              Exportar\r\n            </Link>\r\n          </Menu.Item>\r\n        </UserRole>\r\n        <Menu.Item key=\"1\">\r\n          <Link to={ baseUrl }>\r\n            Ver todos\r\n          </Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n  )\r\n\r\n  const [ data, setData ] = useState();\r\n\r\n  const loadData = async () => {\r\n    const response = await ApiRequest.get( new UrlBuilder().withCaseId(currentCase.id).withAudioTranscriptionId('').get() )\r\n    setData(response);\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [])\r\n\r\n  const renderContent = () => {\r\n\r\n    if(!data) {\r\n      return <div className=\"ta-c\">\r\n        <Spin size=\"large\" />\r\n      </div>\r\n    } else if(data && data.length===0) {\r\n      return <Empty description=\"Nenhum arquivo de áudio cadastrado\">\r\n        <UserRole roles={['root']} userId={currentCase.user_id}>\r\n          <Link to={`${baseUrl}addFiles`}>\r\n            <Button type=\"primary\">Inserir novo Áudio</Button>\r\n          </Link>\r\n        </UserRole>\r\n      </Empty>\r\n    } else {\r\n      return <List\r\n          footer={<div className=\"ta-c\"><Link to={baseUrl}><Button type=\"ghost\" block>Ver todos os itens</Button></Link></div>}\r\n          dataSource={data}\r\n          renderItem={item => <ListItem name={item.name} link={linkTo(item)} extra={<AudioRevisionsCount data={item} />} />}\r\n      />\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n      <div className=\"card\">\r\n          <CardTitle icon=\"file-audio\" title=\"Transcrição de Áudio\" menu={menu} />\r\n          <CardContent>\r\n              { renderContent() }\r\n          </CardContent>\r\n      </div>\r\n  );\r\n}","import React from 'react';\r\nimport { CardContent, CardTitle } from '../../atoms/Card'\r\nimport { Empty, List, Menu } from 'antd';\r\nimport ListItem from '../ListItem';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function EntityDetectionCard (props) {\r\n\r\n    const menu = (\r\n        <Menu>\r\n          <Menu.Item key=\"2\">\r\n            <Link to=\"/entity-detection/import\">\r\n              Importar\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\">\r\n            <Link to=\"/entity-detection/entities\">\r\n              Entidades\r\n            </Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n    )\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <CardTitle icon=\"tags\" title=\"Detecção de Entidades\" menu={menu} />\r\n            <CardContent>\r\n                <Empty description=\"Em desenvolvimento\" image=\"https://cdn2.iconfinder.com/data/icons/random-set-1/404/Asset_81-256.png\" ></Empty>\r\n            </CardContent>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { CardContent, CardTitle } from '../../atoms/Card'\r\nimport { Empty, List, Menu } from 'antd';\r\nimport ListItem from '../ListItem';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function ParaphraseCard (props) {\r\n\r\n    const menu = (\r\n        <Menu>\r\n          <Menu.Item key=\"0\">\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.antgroup.com\">\r\n              Configurações\r\n            </a>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"1\">\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.antgroup.com\">\r\n              Cadastrar\r\n            </a>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\">\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.antgroup.com\">\r\n              Importar\r\n            </a>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"3\">\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.antgroup.com\">\r\n              Ver todos\r\n            </a>\r\n          </Menu.Item>\r\n        </Menu>\r\n    )\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <CardTitle icon=\"quote-left\" title=\"Paráfrase\" menu={menu} />\r\n            <CardContent>\r\n              <Empty description=\"Em desenvolvimento\" image=\"https://cdn2.iconfinder.com/data/icons/random-set-1/404/Asset_81-256.png\" ></Empty>\r\n            </CardContent>\r\n        </div>\r\n    );\r\n}","import { UrlBuilder } from \"./urlBuilder\";\r\n\r\nexport class CaseUrlBuilder extends UrlBuilder {\r\n\r\n    constructor() {\r\n        super(\"project\");\r\n    }\r\n\r\n    withId(id) {\r\n        this.append(id);\r\n        return this;\r\n    }\r\n\r\n}","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport { ApiRequest } from '../services/apiRequestService'\r\nimport { CaseUrlBuilder } from '../services/urlBuilder/caseUrlBuilder';\r\n\r\nexport const fetchCases = createAsyncThunk(\r\n  'fetchCases',\r\n  async () => {\r\n    const response = await ApiRequest.get( new CaseUrlBuilder().get() );\r\n    return response\r\n  }\r\n)\r\n\r\nexport const fetchCaseById = createAsyncThunk(\r\n  'fetchCaseById',\r\n  async (id) => {\r\n    const response = await ApiRequest.get( new CaseUrlBuilder().withId(id).get() );\r\n    return response\r\n  }\r\n)\r\n\r\nexport const deleteCaseById = createAsyncThunk(\r\n  'fetchCaseById',\r\n  async (id) => {\r\n    const response = await ApiRequest.delete( new CaseUrlBuilder().withId(id).get() );\r\n    fetchCases();\r\n    return response;\r\n  }\r\n)\r\n\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n  },\r\n  reducers: {\r\n    setCase: (state, action) => {\r\n      state.currentCase = action.payload\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchCases.fulfilled, (state, action) => {\r\n      state.caseList = action.payload\r\n    })\r\n    .addCase(fetchCaseById.fulfilled, (state, action) => {\r\n      state.currentCase = action.payload\r\n    })\r\n  }\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { setCase } = userSlice.actions\r\n\r\nexport default userSlice.reducer","export default __webpack_public_path__ + \"static/media/logo.70aaaf4d.svg\";","import React from 'react';\r\nimport { Avatar, Tooltip } from 'antd';\r\n\r\nexport default function UserAvatar (props) {\r\n\r\n    const { user, size, tooltip } = props;\r\n\r\n    function stringToHslColor(s, l) {\r\n        var hash = 0;\r\n        if(!user) return '';\r\n        for (var i = 0; i < user.name.length; i++) {\r\n          hash = user?.name.charCodeAt(i) + ((hash << 5) - hash);\r\n        }\r\n      \r\n        var h = hash % 360;\r\n        return 'hsl('+h+', '+s+'%, '+l+'%)';\r\n      }\r\n\r\n    const firstLetters = () => {\r\n        return user?.name.split(\" \").map(word => word.slice(0, 1) );\r\n    }\r\n\r\n    const renderAvatar = () => (\r\n      <Avatar size={size} style={{ backgroundColor: stringToHslColor(30, 80) }}>{ firstLetters() }</Avatar>\r\n    )\r\n\r\n    return (<>\r\n        { tooltip ? (\r\n        <Tooltip title={user?.name}>{ renderAvatar() }</Tooltip>\r\n        ) : (\r\n          renderAvatar()\r\n        )}\r\n    </>);\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { ApiRequest } from '../../../services/apiRequestService';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport UserAvatar from '../../atoms/Avatar';\r\nimport UserRole from '../../atoms/UserRole';\r\n\r\nexport default function LoggedUser (props) {\r\n\r\n    const user = useSelector( state => state.user.data );\r\n    const history = useHistory();\r\n\r\n    const logout = () => {\r\n        ApiRequest.removeToken();\r\n        history.replace(\"/login\");\r\n    };\r\n\r\n    const menu = (\r\n        <Menu>\r\n            <UserRole roles={['admin', 'root']}>\r\n                <Link to=\"/user\">\r\n                    <Menu.Item>\r\n                        Usuários\r\n                    </Menu.Item>\r\n                </Link>\r\n            </UserRole>\r\n            <Menu.Item onClick={ logout }>\r\n                Logout\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Dropdown overlay={menu} trigger={['click']}>\r\n                <a href=\"#\">\r\n                    <UserAvatar user={user} />\r\n                </a>\r\n            </Dropdown>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\nimport Logo from '../../../assets/logo.svg';\r\nimport './styles.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport LoggedUser from '../../molecules/LoggedUser';\r\n\r\nexport default function Header (props) {\r\n\r\n    return (\r\n        <header id=\"header\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-xs-6\">\r\n                        <h1>\r\n                            <Link to=\"/\"><img src={Logo} alt=\"\" />\r\n                            Software de Anotação\r\n                            </Link>\r\n                        </h1>\r\n                    </div>\r\n                    <div className=\"col-xs-6 ta-r\">\r\n                        <LoggedUser />\r\n                    </div>\r\n                </div>\r\n                <div className=\"user\">\r\n\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ColorService } from '../../../services/colorService';\r\nimport './styles.scss';\r\n\r\nexport default function SubHeader (props) {\r\n\r\n    const color = () => {\r\n        if(props.color)\r\n            return { backgroundColor: ColorService.getColor(props.color) }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <header id=\"subheader\" style={ color() } className={ props.color ? 'secondary' : '' }>\r\n            <div className=\"container\">\r\n                <div className=\"row middle-xs\">\r\n                    <div className=\"col-xs title truncate\">\r\n                            { props.linkTo ? (\r\n                                <Link to={props.linkTo}>{props.title}</Link>\r\n                                ) : <>{props.title}</> }\r\n                    </div>\r\n                    { props.extras }\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n\r\n}","import React from 'react';\r\n\r\nexport default function Content (props) {\r\n\r\n    return (\r\n        <main id=\"content\">\r\n            <div className=\"container\">\r\n                { props.children }\r\n            </div>\r\n        </main>\r\n    );\r\n\r\n}","import React from 'react';\r\nimport Header from '../../components/organisms/Header';\r\nimport Subheader from '../../components/organisms/Subheader';\r\nimport Content from '../../components/organisms/Content';\r\n\r\n\r\nexport default function HeaderContent (props) {\r\n\r\n    return (\r\n        <div id=\"structure\" className=\"App\">\r\n            <Header />\r\n            <Subheader linkTo={props.linkTo} title={props.subtitle} color={props.color} extras={props.extras} />\r\n            <Content>\r\n                { props.children }\r\n            </Content>\r\n        </div>\r\n    );\r\n\r\n}","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchCaseById } from '../../reducers/cases';\r\nimport HeaderContent from '../HeaderContent';\r\nimport { Spin, Avatar, Tooltip } from 'antd';\r\nimport Label from '../../components/atoms/Label';\r\nimport UserAvatar from '../../components/atoms/Avatar';\r\nimport nl2br from 'react-nl2br';\r\n\r\nexport default function CaseHeaderContent(props) {\r\n\r\n    const { projectId } = useParams();\r\n    const currentCase = useSelector(state => state.case.currentCase);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!currentCase || currentCase.id != projectId) {\r\n            dispatch(fetchCaseById(projectId));\r\n        }\r\n    }, []);\r\n\r\n    const extras = (<>\r\n        <div className=\"col-xs-6 truncate\">\r\n            <Tooltip title={nl2br(currentCase?.description)}>\r\n                { currentCase?.description }\r\n            </Tooltip>\r\n        </div>\r\n        <div className=\"col-xs-2 ta-r\">\r\n            <Label>Usuários</Label>\r\n            {currentCase?.users.length ? \"\" : \"Nenhum usuário vinculado\"}\r\n            <Avatar.Group>\r\n                {currentCase?.users.map(user => <UserAvatar key={user.id} user={user} tooltip={true} />)}\r\n            </Avatar.Group>\r\n        </div>\r\n    </>)\r\n\r\n    return (\r\n        <HeaderContent linkTo={`/case/${currentCase?.id}/detail`} subtitle={currentCase?.name} color={currentCase?.color} extras={extras}>\r\n            {!currentCase ? <div className=\"ta-c\"><Spin size=\"large\" /></div> : props.children}\r\n        </HeaderContent>\r\n    );\r\n\r\n}","import React from 'react';\r\nimport { Avatar, Empty } from 'antd';\r\nimport Label from '../../../components/atoms/Label';\r\nimport AudioTranscriptionCard from '../../../components/molecules/AudioTranscriptionCard'\r\nimport EntityDetectionCard from '../../../components/molecules/EntityDetectionCard';\r\nimport ParaphraseCard from '../../../components/molecules/ParaphraseCard';\r\nimport { useSelector } from 'react-redux';\r\nimport CaseHeaderContent from '../../../templates/CaseHeaderContent';\r\nimport UserAvatar from '../../../components/atoms/Avatar';\r\n\r\nexport default function CaseDetail (props) {\r\n\r\n    const currentCase = useSelector(state => state.case.currentCase);\r\n\r\n    return (\r\n        <CaseHeaderContent>\r\n            { currentCase ? (<>\r\n                { currentCase.open ?\r\n                <div className=\"row mt-1\">\r\n\r\n                    { currentCase.has_audio_transcription ? (\r\n                        <div className=\"col-xs\">\r\n                            <AudioTranscriptionCard currentCase={currentCase} />\r\n                        </div>\r\n                    ) : null }\r\n\r\n                    { currentCase.has_entities_detection ? (\r\n                        <div className=\"col-xs\">\r\n                            <EntityDetectionCard />\r\n                        </div>\r\n                    ) : null }\r\n\r\n                    { currentCase.has_paraphrases ? (\r\n                        <div className=\"col-xs\">\r\n                            <ParaphraseCard />\r\n                        </div>\r\n                    ) : null }\r\n\r\n                </div>\r\n                : \r\n                <Empty description=\"CASO FECHADO\" image=\"https://cdn4.iconfinder.com/data/icons/internet-security-flat-2/32/Internet_Security_folder_Archive_lock_locked_private-256.png\" ></Empty>\r\n                }\r\n            </>) : null }\r\n        </CaseHeaderContent>\r\n    );\r\n\r\n}","import React from 'react';\r\nimport { List, Tag } from 'antd';\r\nimport Icon from '../../atoms/Icon';\r\nimport Item from 'antd/lib/list/Item';\r\n\r\nexport default function EntityDetectionSentenceMenu (props) {\r\n\r\n    return (<List.Item\r\n        actions={[\r\n            <Icon icon=\"check-circle\" color='success' />\r\n        ]}\r\n        >\r\n            <List.Item.Meta\r\n                description={props.item}\r\n                />\r\n        </List.Item>\r\n    );\r\n}","import React from 'react';\r\nimport HeaderContent from '../../../templates/HeaderContent';\r\nimport { List, Progress, Button, Divider } from 'antd';\r\nimport EntityDetectionSentenceMenu from '../../../components/molecules/EntityDetectionSentenceMenu';\r\n\r\nexport default function EntityDetectionAnnotation (props) {\r\n\r\n    return (\r\n        <HeaderContent subtitle=\"Projeto de teste\" color=\"HEX\">\r\n            <div className=\"row between-xs\">\r\n\r\n                <div className=\"col-xs-12 col-md-4\">\r\n                    <Progress percent={30} showInfo={false} />\r\n                    <List\r\n                        dataSource={[\r\n                            'O governo dos Estados Unidos emitiu um alerta sobre novas atividades hackers norte...',\r\n                            'O grupo é notório por ter realizado ataques em mais de 30 países, inclusive no Brasil, mas...',\r\n                            'O alerta é assinado pela Agência de Cibersegurança e Segurança de Infraestru...'\r\n                        ]}\r\n                        renderItem={item => <EntityDetectionSentenceMenu item={item} />}\r\n                    >\r\n                    </List>\r\n                </div>\r\n\r\n                <div className=\"col-xs-12 col-md-7\">\r\n                    <div className=\"text fz-1\">\r\n                        O governo dos Estados Unidos  emitiu um alerta sobre novas atividades hackers norte-coreanos especializados em atacar instituições financeiras. O grupo, chamado de BeagleBoyz , é indicado como responsável por um ataque batizado de FASTCash, em que o dinheiro é sacado de caixas eletrônicas ou movimentado por meio de transferências bancárias.\r\n                    </div>\r\n\r\n                    <Divider />\r\n\r\n                    <div className=\"row between-xs\">\r\n                        <div className=\"col-xs\">\r\n                            <Button>Voltar</Button>\r\n                        </div>\r\n                        <div className=\"col-xs ta-c\">\r\n                            1/5\r\n                        </div>\r\n                        <div className=\"col-xs ta-r\">\r\n                            <Button type=\"primary\">Avançar</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            \r\n        </HeaderContent>\r\n    );\r\n\r\n}","import React, { useState } from 'react';\r\nimport Header from '../../components/organisms/Header';\r\nimport Subheader from '../../components/organisms/Subheader';\r\nimport Content from '../../components/organisms/Content';\r\nimport Card from '../../components/molecules/Card';\r\nimport { Form, Button, Divider, message, Spin } from 'antd';\r\nimport FormInput from '../../components/organisms/FormInput';\r\nimport { UrlBuilder } from '../../services/urlBuilder/urlBuilder';\r\nimport { ApiRequest } from '../../services/apiRequestService';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { FixPath } from '../../services/fixPath';\r\n\r\nexport default function HeaderForm(props) {\r\n\r\n    const { formData, editing } = props;\r\n    const [loading, setLoading] = useState(false);\r\n    const [values, setValues] = useState();\r\n    const history = useHistory();\r\n    const [form] = Form.useForm();\r\n    const { id } = useParams();\r\n    const params = useParams();\r\n\r\n    const baseUrl = () => {\r\n        let url = new UrlBuilder(formData.baseRoute).get();\r\n        return FixPath.fix(url, params);\r\n    }\r\n\r\n    const onFinish = (values) => {\r\n\r\n        if (values.file)\r\n            values.file = values.file.fileList[0].response.url;\r\n\r\n        if (editing)\r\n            edit(values);\r\n        else\r\n            create(values);\r\n\r\n    };\r\n\r\n    const create = (data) => {\r\n        save(baseUrl(), \"post\", data);\r\n    }\r\n\r\n    const edit = (data) => {\r\n        save(baseUrl() + id, \"put\", data);\r\n    }\r\n\r\n    const save = async (url, method, data) => {\r\n        setLoading(true);\r\n        try {\r\n            await ApiRequest.request(\r\n                url,\r\n                method,\r\n                data\r\n            );\r\n            message.success(editing ? \"Edição realizada com sucesso\" : \"Cadastro realizado com sucesso\", 5);\r\n            goBack();\r\n        } catch {\r\n            message.error(\"Não foi possível salvar. Verifique os dados e tente novamente\", 5);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    const loadData = async () => {\r\n        if (editing) {\r\n            const data = await ApiRequest.get(baseUrl() + id);\r\n            setValues(data);\r\n            form.setFieldsValue(data);\r\n        }\r\n    }\r\n\r\n    const goBack = () => {\r\n        history.push(formData.pathAfterSave ? FixPath.fix(formData.pathAfterSave, params) : `/${FixPath.fix(formData.path, params)}`);\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, [])\r\n\r\n    const formFields = () => {\r\n        let fields = formData.form;\r\n\r\n        if (editing)\r\n            fields = fields.filter(field => !field.hideOnEditing);\r\n\r\n        if (!editing)\r\n            fields = fields.filter(field => !field.hideOnCreating);\r\n\r\n        return fields;\r\n    }\r\n\r\n    const onValuesChange = (changed, values) => {\r\n        setValues(values);\r\n    }\r\n\r\n    const showIf = (conditions) => {\r\n        if(!values) return false;\r\n        for(const key in conditions) {\r\n            if(values[key] !== conditions[key]) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <div id=\"structure\" className=\"App\">\r\n            <Header />\r\n            <Subheader title={formData.title} />\r\n            <Content>\r\n                <div className=\"row center-xs\">\r\n                    <div className=\"col-xs-12 col-md-6 ta-l\">\r\n                        <Card title={editing ? formData.editTitle : formData.createTitle} icon=\"edit\">\r\n                            <Form\r\n                                form={form}\r\n                                name=\"basic\"\r\n                                labelCol={{ span: 8 }}\r\n                                wrapperCol={{ span: 16 }}\r\n                                onFinish={onFinish}\r\n                                onValuesChange={onValuesChange}\r\n                            >\r\n\r\n                                {formFields().map(field => {\r\n                                    if(!field.showIf || showIf(field.showIf))\r\n                                        return <FormInput field={field} form={form} />\r\n                                    return null;\r\n                                })}\r\n\r\n                                <Divider />\r\n\r\n                                <Form.Item wrapperCol={{ span: 24 }} className=\"ta-c\">\r\n                                    <Button disabled={loading} type=\"primary\" htmlType=\"submit\">\r\n                                        {loading ? <Spin /> : \"Salvar\"}\r\n                                    </Button>\r\n                                    <Button className=\"ml-4\" type=\"link\" onClick={goBack}>Cancelar</Button>\r\n                                </Form.Item>\r\n\r\n                            </Form>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </Content>\r\n        </div>\r\n    );\r\n\r\n}","import React from 'react';\r\nimport HeaderForm from '../../../templates/HeaderForm';\r\nimport formData from '../../../data/form/entity_detection_import.json';\r\n\r\nexport default function EntityDetectionImport (props) {\r\n\r\n    return (\r\n        <HeaderForm subtitle=\"Projeto de teste\" formTitle=\"Importar documento\" formData={formData} >\r\n        </HeaderForm>\r\n    );\r\n\r\n}","import React from 'react';\r\nimport HeaderContent from '../../../../templates/HeaderContent';\r\nimport { Table, Tag, Divider, Button } from 'antd';\r\nimport Card from '../../../../components/molecules/Card';\r\nimport Icon from '../../../../components/atoms/Icon';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function EntityDetectionEntities (props) {\r\n\r\n    const dataSource = [\r\n        {\r\n            key: '1',\r\n            label: 'CNPJ',\r\n            description: 'Lorem ipsum dolor sit amet',\r\n            icon: 'user',\r\n            color: 'gold'\r\n        },\r\n        {\r\n            key: '1',\r\n            label: 'Organização',\r\n            description: 'Lorem ipsum dolor sit amet',\r\n            icon: 'building',\r\n            color: 'blue'\r\n        },\r\n        \r\n      ];\r\n      \r\n      const columns = [\r\n        {\r\n          title: 'Entidade',\r\n          dataIndex: 'label',\r\n          key: 'label',\r\n          render: (label, record) => (\r\n            <Tag color={record.color}><Icon icon={record.icon} /> {label}</Tag>\r\n          )\r\n        },\r\n        {\r\n          title: 'Descrição',\r\n          dataIndex: 'description',\r\n          key: 'description',\r\n        },\r\n        {\r\n          title: 'Ação',\r\n          key: 'action',\r\n          render: (text, record) => (\r\n              <>\r\n                <a className=\"mr-2\"><Icon icon=\"edit\" /></a>\r\n                <a className=\"color-danger\"><Icon icon=\"trash\" /></a>\r\n              </>\r\n          ),\r\n        }\r\n      ];\r\n\r\n    return (\r\n        <HeaderContent subtitle=\"Projeto de teste\" color=\"HEX\">\r\n            \r\n            <Card title=\"Entidades\" icon=\"tags\">\r\n                <Table dataSource={dataSource} columns={columns} />\r\n                <Divider />\r\n                <div className=\"ta-c\">\r\n                  <Link to=\"/entity-detection/entities/new\"><Button type=\"primary\">Cadastrar entidade</Button></Link>\r\n                </div>\r\n            </Card>\r\n\r\n        </HeaderContent>\r\n    );\r\n\r\n}","import React from 'react';\r\nimport HeaderForm from '../../../../templates/HeaderForm';\r\nimport formData from '../../../../data/form/entities.json';\r\n\r\nexport default function EntityDetectionEntitiesForm (props) {\r\n\r\n    return (\r\n        <HeaderForm subtitle=\"Projeto de teste\" color=\"hex\" formTitle=\"Cadastrar Entidade\" formData={formData} >\r\n        </HeaderForm>\r\n    );\r\n\r\n}","import { Spin, Tooltip } from 'antd';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { ApiRequest } from '../../../services/apiRequestService';\r\nimport { UrlBuilder } from '../../../services/urlBuilder/urlBuilder';\r\nimport Icon from '../Icon';\r\n\r\nexport default function AudioPlayer(props) {\r\n\r\n    const {file} = props;\r\n    const audioFile = () => new UrlBuilder(\"files/\"+file).get();\r\n    const [ exists, setExists ] = useState(false);\r\n\r\n    const checkExist = () => {\r\n            ApiRequest.head(audioFile()).then(res => {\r\n                setExists(true);\r\n            }).catch(error => {\r\n                console.error(error);\r\n                setTimeout(() => {\r\n                    checkExist();\r\n                }, 3000);\r\n            });\r\n    }\r\n\r\n    const allowDownload = () => props.allowDownload ? '' : \"nodownload\";\r\n\r\n    useEffect(() => {\r\n        setExists(false);\r\n        checkExist();\r\n    }, [file])\r\n\r\n    return (<>\r\n        { exists ? \r\n            <>\r\n                <audio controls controlsList={allowDownload()} >\r\n                    <source src={audioFile()} ></source>\r\n                </audio>\r\n                <Tooltip title={<p>\r\n                    Altere a velocidade do áudio pressionando no seu teclado os números: <br />\r\n                    1: 0,75x <br />\r\n                    2: 1,00x <br />\r\n                    3: 1,25x <br />\r\n                    4: 1,75x <br />\r\n                    5: 2,00x <br />\r\n                </p>}>\r\n                    <span><Icon icon=\"question-circle\" /></span>\r\n                </Tooltip>\r\n            </>\r\n        : \r\n            <div><Spin /> Convertendo áudio...</div>\r\n        }\r\n    </>)\r\n}","export default class BaseUrls {\r\n\r\n    static USERS = \"user\";\r\n    static PROJECTS = \"project\";\r\n    static PROJECT = \"project/:projectId\";\r\n    static USER = \"user/:userId\";\r\n    static PROJECT_USER = \"project/:projectId/user/:userId\";\r\n\r\n    static AUDIO_PAGE_VIEW = \"/case/:caseId/audio-transcription/:audioId/view\";\r\n\r\n    static AUDIO_TRANSCRIPTION_UPLOAD = \"project/:projectId/audio_transcription\";\r\n    static AUDIO_TRANSCRIPTION_EXPORT = \"project/:projectId/audio_transcription/export\";\r\n    static AUDIO_TRANSCRIPTION = \"project/:projectId/audio_transcription/:id\";\r\n    static AUDIO_TRANSCRIPTION_SEGMENT = \"project/:projectId/audio_transcription/:id/segment\";\r\n    static AUDIO_TRANSCRIPTION_SEGMENT_EDIT = \"project/:projectId/audio_transcription/:audioTranscriptionId/segment/:id\";\r\n    static AUDIO_TRANSCRIPTION_SEGMENT_REVISION_CREATE = \"project/:projectId/audio_transcription/:audioTranscriptionId/segment/:segmentId/revision\";\r\n    static AUDIO_TRANSCRIPTION_SEGMENT_REVISION_UPDATE = \"project/:projectId/audio_transcription/:audioTranscriptionId/segment/:segmentId/revision/:id\";\r\n    \r\n}","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport { ApiRequest } from '../services/apiRequestService'\r\nimport BaseUrls from '../utils/baseUrls';\r\n\r\nexport const fetchAudioTranscription = createAsyncThunk(\r\n  'audioTranscription/fetch',\r\n  async (params) => {\r\n    const response = await ApiRequest.setUrl(BaseUrls.AUDIO_TRANSCRIPTION, params).get();\r\n    return response;\r\n  }\r\n)\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'audioTranscription',\r\n  initialState: {\r\n  },\r\n  reducers: {\r\n    setUser: (state, action) => {\r\n      state.data = action.payload\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchAudioTranscription.fulfilled, (state, action) => {\r\n        state.data = action.payload;\r\n    })\r\n  }\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { setUser } = userSlice.actions\r\n\r\nexport default userSlice.reducer","import { Button, Form, Input, message, Spin } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { fetchAudioTranscription } from \"../../../reducers/audioTranscription\";\r\nimport { ApiRequest } from \"../../../services/apiRequestService\";\r\nimport BaseUrls from \"../../../utils/baseUrls\";\r\n\r\n\r\nexport default function AudioTranscriptionRevisionForm (props) {\r\n\r\n    const { edit, initialValue } = props;\r\n    const [form] = Form.useForm();\r\n    const [loading, setLoading] = useState(false);\r\n    const params = useParams();\r\n    const urlParams = {\r\n        projectId: params.projectId,\r\n        audioTranscriptionId: params.id,\r\n        segmentId: props.segment.id,\r\n    }\r\n    const dispatch = useDispatch();\r\n\r\n    const addRevision = async (data) => {\r\n        setLoading(true);\r\n        try {\r\n\r\n            if(edit)\r\n                await ApiRequest.setUrl(BaseUrls.AUDIO_TRANSCRIPTION_SEGMENT_REVISION_UPDATE, urlParams, edit.id)\r\n                    .put(null, data);\r\n            else \r\n                await ApiRequest.setUrl(BaseUrls.AUDIO_TRANSCRIPTION_SEGMENT_REVISION_CREATE, urlParams)\r\n                    .post(null, data);\r\n\r\n            \r\n            message.success(\"Revisão adicionada com sucesso\", 5);\r\n            form.resetFields();\r\n        } catch {\r\n            message.error(\"Não foi possível adicionar a revisão\", 5);\r\n        }\r\n        dispatch(fetchAudioTranscription(params));\r\n        setLoading(false);\r\n    }\r\n\r\n    const onFinish = (values) => {\r\n        addRevision(values);\r\n      };\r\n\r\n    const onKeyDown = (ev) => {\r\n        if (ev.ctrlKey && ev.keyCode === 13) {\r\n            form.submit();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            layout=\"vertical\"\r\n            onFinish={onFinish}\r\n            form={form}\r\n            initialValues={{\r\n                revision: edit?.revision || initialValue\r\n            }}\r\n        >\r\n            <Form.Item \r\n                label=\"Transcrição\" \r\n                name=\"revision\"\r\n                rules={[{ required: true, message: 'Digite sua transcrição antes de enviar' }]}\r\n                extra=\"Pressione CTRL+ENTER para enviar sua transcrição\"\r\n            >\r\n                <Input.TextArea onKeyDown={onKeyDown} autoSize placeholder=\"Digite aqui a sua transcrição\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Button disabled={loading} htmlType=\"submit\" type=\"primary\">{ loading ? <Spin /> : \"Enviar\" }</Button>\r\n                { props.onCancel ? <Button onClick={props.onCancel} type=\"link\">Cancelar</Button> : null }\r\n            </Form.Item>\r\n\r\n        </Form>\r\n    );\r\n\r\n}","import { Comment, Popconfirm } from \"antd\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { ApiRequest } from \"../../../services/apiRequestService\";\r\nimport BaseUrls from \"../../../utils/baseUrls\";\r\nimport UserAvatar from \"../../atoms/Avatar\";\r\nimport Icon from \"../../atoms/Icon\";\r\nimport { fetchAudioTranscription } from \"../../../reducers/audioTranscription\";\r\nimport UserRole from \"../../atoms/UserRole\";\r\n\r\nexport default function AudioTranscriptionRevision (props) {\r\n\r\n    const {revision, segmentId} = props;\r\n\r\n    const params = useParams();\r\n    const data = {\r\n        projectId: params.projectId,\r\n        audioTranscriptionId: params.id,\r\n        segmentId\r\n    }\r\n    const dispatch = useDispatch();\r\n\r\n    const deleteItem = async (record) => {\r\n        await ApiRequest.setUrl(BaseUrls.AUDIO_TRANSCRIPTION_SEGMENT_REVISION_UPDATE, data, record.id).delete();\r\n        dispatch(fetchAudioTranscription(params));\r\n    }\r\n\r\n    const approveItem = async (record, approved) => {\r\n        await ApiRequest.setUrl(BaseUrls.AUDIO_TRANSCRIPTION_SEGMENT_REVISION_UPDATE, data, record.id).put(null, {approved});\r\n        dispatch(fetchAudioTranscription(params));\r\n    }\r\n\r\n    const removeButton = (record) => {\r\n        \r\n        return (\r\n        <UserRole roles={['admin', 'root']} userId={revision.user_id}>\r\n            <Popconfirm\r\n                title={`Você deseja realmente remover este item?`}\r\n                onConfirm={(e) => deleteItem(record)}\r\n                okText=\"Sim\"\r\n                cancelText=\"Não\"\r\n                >\r\n                <span><Icon icon='trash' /> remover</span>\r\n            </Popconfirm>\r\n        </UserRole>\r\n    )}\r\n\r\n    const editButton = (record) => {\r\n        return (\r\n        <UserRole roles={['admin', 'root']} userId={revision.user_id}>\r\n            <span onClick={() => props.onEdit(record)}>\r\n                <Icon icon='edit' /> editar\r\n            </span>\r\n        </UserRole>\r\n    )}\r\n\r\n    const approveButton = (record) => {\r\n        if(!record.approved) {\r\n            return (\r\n                <UserRole roles={['curator', 'admin', 'root']}>\r\n                    <span onClick={() => approveItem(record, true)}>\r\n                        <Icon icon='thumbs-up' /> aprovar transcrição\r\n                    </span>\r\n                </UserRole>\r\n            )\r\n        } else {\r\n            return (\r\n                <UserRole roles={['curator', 'admin', 'root']}>\r\n                    <span onClick={() => approveItem(record, false)}>\r\n                        <Icon icon='ban' /> remover aprovação\r\n                    </span>\r\n                </UserRole>\r\n            )\r\n        }\r\n    }\r\n\r\n    const duplicateButton = (record) => {\r\n        return (\r\n            <span onClick={() => props.onDuplicate(record)}>\r\n                <Icon icon='copy' /> duplicar\r\n            </span>\r\n    )}\r\n\r\n    return (\r\n        <Comment \r\n            className={revision.approved ? \"approved\" : \"\"}\r\n            avatar={<UserAvatar user={revision.user} />}\r\n            author={revision.user.name}\r\n            content={revision.revision}\r\n            datetime={ new Date(revision.createdAt).toLocaleString('pt-BR')}\r\n            actions={[approveButton(revision), removeButton(revision), editButton(revision), duplicateButton(revision)]}\r\n        />\r\n    );\r\n\r\n}","export default class Utils {\r\n\r\n    static secondsToMinutes = (seconds) => {\r\n        const format = val => `0${Math.floor(val)}`.slice(-2)\r\n        const hours = seconds / 3600\r\n        const minutes = (seconds % 3600) / 60\r\n        \r\n        return hours > 0 ? \r\n            [hours, minutes, seconds % 60].map(format).join(':') \r\n            : [minutes, seconds % 60].map(format).join(':')\r\n    }\r\n    \r\n}","import React from 'react';\r\n\r\nexport default function If(props) {\r\n\r\n    return (\r\n        props.condition ? props.children : null\r\n    )\r\n}","import { Button, Divider, Slider, Spin } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { ApiRequest } from '../../../services/apiRequestService';\r\nimport BaseUrls from '../../../utils/baseUrls';\r\nimport Utils from '../../../utils/utils';\r\nimport If from '../../atoms/If';\r\nimport { fetchAudioTranscription } from '../../../reducers/audioTranscription';\r\n\r\nexport default function AudioTranscriptionSegmentEdit (props) {\r\n\r\n    const defaultValue = props.defaultValue;\r\n    const [data, setData] = useState(defaultValue);\r\n    const [loading, setLoading] = useState(false);\r\n    const params = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n    const onChangeSlider = ( value) => {\r\n        setData(value);\r\n    }\r\n\r\n    const save = async () => {\r\n        setLoading(true);\r\n        await ApiRequest.setUrl(BaseUrls.AUDIO_TRANSCRIPTION_SEGMENT+\"/\"+props.segment.id, params)\r\n                .put(null, {start_time: data[0], end_time: data[1]})\r\n        setLoading(false);\r\n        dispatch(fetchAudioTranscription(params));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Divider orientation=\"left\">Editar Segmento</Divider>\r\n\r\n            <If condition={data && defaultValue}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-xs-1\">{ Utils.secondsToMinutes(data[0]) }</div>\r\n                    <div className=\"col-xs\">\r\n                        <Slider \r\n                            onChange={(value) => onChangeSlider(value) }\r\n                            range \r\n                            defaultValue={defaultValue} \r\n                            max={props.total_time} \r\n                            />\r\n                    </div>\r\n                    <div className=\"col-xs-1 ta-r\">{ Utils.secondsToMinutes(data[1]) }</div>\r\n                </div>\r\n\r\n                <Button disabled={loading} className=\"mr-4\" onClick={save} type=\"primary\">{ loading ? <Spin /> : \"Enviar\" }</Button>\r\n                <Button onClick={() => props.onCancel(false) } type=\"link\">Cancelar</Button>\r\n            </If>\r\n        </>\r\n    );\r\n\r\n}","import { Button, Divider, Popconfirm } from 'antd';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport AudioPlayer from '../../atoms/AudioPlayer';\r\nimport AudioTranscriptionRevisionForm from '../AudioTranscriptionRevisionForm';\r\nimport AudioTranscriptionRevision from '../AudioTranscriptionRevision';\r\nimport AudioTranscriptionSegmentEdit from '../AudioTranscriptionSegmentEdit';\r\nimport { useEffect } from 'react';\r\nimport UserRole from '../../atoms/UserRole';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchAudioTranscription } from '../../../reducers/audioTranscription';\r\nimport { useParams } from 'react-router-dom';\r\nimport { ApiRequest } from '../../../services/apiRequestService';\r\nimport BaseUrls from '../../../utils/baseUrls';\r\nimport If from '../../atoms/If';\r\n\r\nexport default function AudioTranscriptionSegment (props) {\r\n\r\n    const { segment } = props;\r\n    const [ showForm, setShowForm] = useState(false);\r\n    const [ showEditForm, setShowEditForm] = useState(false);\r\n    const [ formInitialValue, setFormInitialValue] = useState(\"\");\r\n    const [ editRevisionData, setEditRevisionData] = useState(false);\r\n    const currentCase = useSelector(state => state.case.currentCase);\r\n    const currentAudio = useSelector(state => state.audioTranscription.data);\r\n    const dispatch = useDispatch();\r\n    const params = useParams();\r\n\r\n    const addTranscription = () => {\r\n        cancelTranscription();\r\n        setFormInitialValue('');\r\n        setShowForm(true);\r\n    }\r\n\r\n    const cancelTranscription = () => {\r\n        setShowForm(false);\r\n        setFormInitialValue('');\r\n        setEditRevisionData(false);\r\n    }\r\n\r\n    const editRevision = (data) => {\r\n        cancelTranscription();\r\n        setEditRevisionData(data);\r\n    }\r\n\r\n    const duplicateRevision = (data) => {\r\n        cancelTranscription();\r\n        setFormInitialValue(data.revision);\r\n        setShowForm(true);\r\n    }\r\n\r\n    const deleteSegment = async () => {\r\n        await ApiRequest.setUrl(BaseUrls.AUDIO_TRANSCRIPTION_SEGMENT+\"/\"+segment.id, params).delete(null);\r\n        dispatch(fetchAudioTranscription(params));\r\n    }\r\n\r\n    useEffect(() => {\r\n        cancelTranscription();\r\n    }, [segment])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row middle-xs\">\r\n                <div className=\"col-xs\">\r\n                    <AudioPlayer file={segment.file} />\r\n                </div>\r\n                <If condition={!segment.full_audio}>\r\n                    <div className=\"col-xs ta-r\">\r\n                        <UserRole roles={['root']} userId={currentCase?.user_id} >\r\n                            <Button onClick={() => setShowEditForm(!showEditForm) } type=\"dashed\" className=\"mr-2\">Editar segmento</Button>\r\n                            <Popconfirm\r\n                                title={`Você deseja realmente remover este segmento?`}\r\n                                onConfirm={(e) => deleteSegment()}\r\n                                okText=\"Sim\"\r\n                                cancelText=\"Não\"\r\n                                >\r\n                                <Button type=\"dashed\" danger >Deletar segmento</Button>\r\n                            </Popconfirm>\r\n                        </UserRole>\r\n                    </div>\r\n                </If>\r\n            </div>\r\n\r\n            <If condition={showEditForm}>\r\n                <AudioTranscriptionSegmentEdit onCancel={setShowEditForm} segment={segment} defaultValue={[segment.start_time, segment.end_time]} total_time={currentAudio.total_time} />\r\n            </If>\r\n\r\n            <Divider orientation=\"left\">Transcrições</Divider>\r\n            \r\n            { segment.revisions.length ? (\r\n                <>\r\n                { segment.revisions.map(revision => <AudioTranscriptionRevision onEdit={editRevision} onDuplicate={duplicateRevision} segmentId={segment.id} revision={revision} />) }\r\n\r\n                <Button  onClick={addTranscription} type=\"primary\">Adicionar Transcrição</Button>\r\n                </>\r\n            ) : \"Nenhuma transcrição cadastrada para este segmento. Cadastre sua transcrição abaixo:\" }\r\n\r\n            \r\n\r\n            { showForm || segment.revisions.length===0 ? <>\r\n                <Divider />\r\n                    <AudioTranscriptionRevisionForm \r\n                        initialValue={formInitialValue}\r\n                        segment={segment} \r\n                        onCancel={ segment.revisions.length>0 ? cancelTranscription : null } \r\n                    />\r\n            </> : null }\r\n\r\n            { editRevisionData ? <><Divider /><AudioTranscriptionRevisionForm segment={segment} edit={editRevisionData} onCancel={cancelTranscription} /></> : null }\r\n\r\n\r\n        </>\r\n    );\r\n\r\n}","import { Button, Divider, List, Slider, Spin, message } from 'antd';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { ApiRequest } from '../../../services/apiRequestService';\r\nimport BaseUrls from '../../../utils/baseUrls';\r\nimport Utils from '../../../utils/utils';\r\nimport { fetchAudioTranscription } from '../../../reducers/audioTranscription';\r\nimport Icon from '../../atoms/Icon';\r\n\r\nexport default function AudioTranscriptionSegmentForm (props) {\r\n\r\n    const {audio} = props;\r\n    const baseData = { value: [0, audio.total_time] };\r\n    const [data, setData] = useState([baseData]);\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const params = useParams();\r\n\r\n    const onChangeSlider = (index, value) => {\r\n        let newData = JSON.parse(JSON.stringify(data));\r\n        newData[index].value = value;\r\n        setData(newData);\r\n    }\r\n\r\n    const addSegment = () => {\r\n        let newSlider = {...baseData};\r\n        newSlider.value[0] = data[data.length-1].value[1];\r\n        setData( [...data, ...[newSlider]] );\r\n    }\r\n\r\n    const addSegmentInterval = () => {\r\n        const interval = parseFloat(window.prompt(\"Insira o intervalo (em segundos) que deseja gerar os segmentos:\", \"\"));\r\n        if(interval && interval>0 && interval<audio.total_time) {\r\n            setData([]);\r\n            const newData = [];\r\n            let start = 0;\r\n            while(start < audio.total_time) {\r\n                newData.push({ value: [start, Math.min(start+interval, audio.total_time)] });\r\n                start += interval;\r\n            }\r\n            setTimeout(() => {\r\n                setData(newData);\r\n            }, 15);\r\n        } else {\r\n            message.error('Intervalo inválido! Insira um intervalo válido para gerar os segmentos');\r\n        }\r\n    }\r\n\r\n    const removeSegment = (i) => {\r\n        if(data.length>1) {\r\n            let newData = [...data];\r\n            setData([]);\r\n            newData.splice(i, 1);\r\n            setTimeout(() => {\r\n                setData(newData);\r\n            }, 15);\r\n        }\r\n    }\r\n\r\n    const save = async () => {\r\n        setLoading(true);\r\n        const segments = data.map( item => item.value );\r\n        await ApiRequest.setUrl(BaseUrls.AUDIO_TRANSCRIPTION_SEGMENT, params)\r\n                .post(null, {segments, total_time: audio.total_time})\r\n        setLoading(false);\r\n        dispatch(fetchAudioTranscription(params));\r\n    }\r\n\r\n    return (<>\r\n        <Divider orientation=\"left\">Segmentar áudio</Divider>\r\n        <List \r\n            itemLayout = \"horizontal\"\r\n            dataSource = {data}\r\n            renderItem = { (item, index) => (<List.Item style={{ width: '100%', display: 'block'}}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-xs-1\">{ Utils.secondsToMinutes(item.value[0]) }</div>\r\n                    <div className=\"col-xs\">\r\n                        <Slider \r\n                            onChange={(value) => onChangeSlider(index, value) }\r\n                            range defaultValue={item.value} \r\n                            max={audio.total_time} \r\n                            />\r\n                    </div>\r\n                    <div className=\"col-xs-1 ta-r\">{ Utils.secondsToMinutes(item.value[1]) }</div>\r\n                    <div className=\"col-xs-1 ta-c\"><a className=\"color-danger\" onClick={() => removeSegment(index)}><Icon icon=\"trash\" /></a></div>\r\n                </div>\r\n            </List.Item>)}\r\n            footer = {<>\r\n                <Button disabled={loading} className=\"mr-4\" onClick={save} type=\"primary\">{ loading ? <Spin /> : \"Criar segmentos\" }</Button>\r\n                <Button className=\"mr-4\" onClick={addSegment} type=\"dashed\">Mais segmentos</Button>\r\n                <Button className=\"mr-4\" onClick={addSegmentInterval} type=\"dashed\">Segmentar com intervalo padrão</Button>\r\n                <Button onClick={() => props.showSegmentForm(false) } type=\"link\">Cancelar</Button>\r\n            </>}\r\n        />\r\n    </>);\r\n\r\n}","import { Table } from 'antd';\r\nimport Modal from 'antd/lib/modal/Modal';\r\nimport React, { forwardRef, useImperativeHandle, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { ApiRequest } from '../../../services/apiRequestService';\r\nimport BaseUrls from '../../../utils/baseUrls';\r\nimport Utils from '../../../utils/utils';\r\nimport { fetchAudioTranscription } from '../../../reducers/audioTranscription';\r\n\r\nconst AudioTranscriptionModal = forwardRef((props, ref) => {\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    const [confirmLoading, setConfirmLoading] = React.useState(false);\r\n    const [selectedRows, setSelectedRows] = React.useState([]);\r\n    const data = useSelector(state => state.audioTranscription.data);\r\n    const params = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        showModal() {\r\n            setVisible(true);\r\n        }\r\n    }));\r\n\r\n    const handleOk = async () => {\r\n        setConfirmLoading(true);\r\n\r\n        const data = {segment_ids: selectedRows.reduce((a, r) => [...a, r.key], []) }\r\n        await ApiRequest.setUrl(BaseUrls.AUDIO_TRANSCRIPTION_SEGMENT+\"/merge\", params).post(null, data);\r\n        dispatch(fetchAudioTranscription(params));\r\n\r\n        setVisible(false);\r\n        setConfirmLoading(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        console.log('Clicked cancel button');\r\n        setVisible(false);\r\n    };\r\n\r\n    const columns = [\r\n        {title: \"Segmento\", dataIndex: \"segment\", render: (text, record, i) => `Segmento ${i+1}`},\r\n        {title: \"Tempo\", dataIndex: \"time\", render: (text, record, i) => `${Utils.secondsToMinutes(record.start_time)} - ${Utils.secondsToMinutes(record.end_time)}`},\r\n        {title: \"Transc. Aprovadas\", dataIndex: \"approved\"},\r\n    ]\r\n\r\n    const mappedData = () => data.segments.filter(d => !d.full_audio && !d.is_merge).map(d => ({ key: d.id, start_time: d.start_time, end_time: d.end_time, approved: d.revisions.filter(r => r.approved).length }))\r\n\r\n    const rowSelection = {\r\n        onChange: (_selectedRowKeys, _selectedRows) => {\r\n            setSelectedRows(_selectedRows);\r\n        },\r\n        getCheckboxProps: (record) => ({\r\n            disabled: record.approved===0\r\n        }),\r\n      };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"Mesclar Segmentos\"\r\n            visible={visible}\r\n            onOk={handleOk}\r\n            confirmLoading={confirmLoading}\r\n            onCancel={handleCancel}\r\n        >\r\n            <Table \r\n                rowSelection={{\r\n                    type: \"checkbox\",\r\n                    ...rowSelection\r\n                }}\r\n                dataSource={mappedData()}\r\n                columns={columns}\r\n                pagination={false}\r\n            />\r\n        </Modal>\r\n    );\r\n\r\n})\r\n\r\nexport default AudioTranscriptionModal;","import React, { useEffect, useState } from 'react';\r\nimport Icon from '../../../components/atoms/Icon';\r\nimport { Button, Divider, Collapse, Spin, Card } from 'antd';\r\nimport CaseHeaderContent from '../../../templates/CaseHeaderContent';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport AudioTranscriptionSegment from '../../../components/organisms/AudioTranscriptionSegment';\r\nimport AudioTranscriptionSegmentForm from '../../../components/organisms/AudioTranscriptionSegmentForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchAudioTranscription } from '../../../reducers/audioTranscription';\r\nimport Utils from '../../../utils/utils';\r\nimport UserRole from '../../../components/atoms/UserRole';\r\nimport AudioTranscriptionModal from '../../../components/organisms/AudioTranscriptionModal';\r\nimport { useRef } from 'react';\r\nimport { ApiRequest } from '../../../services/apiRequestService';\r\nimport { UrlBuilder } from '../../../services/urlBuilder/urlBuilder';\r\nimport BaseUrls from '../../../utils/baseUrls';\r\nimport { FixPath } from '../../../services/fixPath';\r\n\r\nexport default function AudioTranscription(props) {\r\n\r\n    const [showSegmentForm, setShowSegmentForm] = useState(false);\r\n    const [audios, setAudios] = useState();\r\n    const dispatch = useDispatch();\r\n    const data = useSelector(state => state.audioTranscription.data);\r\n    const currentCase = useSelector(state => state.case.currentCase);\r\n    const history = useHistory();\r\n\r\n    const params = useParams();\r\n    const mergeModalRef = useRef();\r\n\r\n    const loadData = () => {\r\n        dispatch(fetchAudioTranscription(params));\r\n    }\r\n\r\n    const loadAudios = async () => {\r\n        const response = await ApiRequest.get(new UrlBuilder().withCaseId(currentCase.id).withAudioTranscriptionId('').get())\r\n        setAudios(response);\r\n    }\r\n\r\n    const getSegments = () => data ? data.segments.filter(s => !s.full_audio && !s.is_merge) : [];\r\n    const getMerges = () => data ? data.segments.filter(s => !s.full_audio && s.is_merge) : [];\r\n    const getFullAudio = () => data?.segments.find(s => s.full_audio);\r\n\r\n    const getMergeTimes = (data) => {\r\n        data = JSON.parse(data);\r\n        return data.map(d => `${Utils.secondsToMinutes(d.start_time)}-${Utils.secondsToMinutes(d.end_time)}`).join(\"] [\")\r\n    }\r\n\r\n    const changeAudioSpeed = (ev) => {\r\n        let vel = 1;\r\n        // console.log(ev.keyCode);\r\n        switch (ev.keyCode) {\r\n            case 49: // 1\r\n            case 97: // 1\r\n                vel = .75;\r\n                break;\r\n            case 50: // 2\r\n            case 98: // 2\r\n                vel = 1;\r\n                break;\r\n            case 51: // 3\r\n            case 99: // 3\r\n                vel = 1.25;\r\n                break;\r\n            case 52: // 4\r\n            case 100: // 4\r\n                vel = 1.75;\r\n                break;\r\n            case 53: // 5\r\n            case 101: // 5\r\n                vel = 2;\r\n                break;\r\n            case 80: // P\r\n                if (nextAudio()) {\r\n                    history.push(nextAudio());\r\n                    return;\r\n                }\r\n                break;\r\n            case 65: // A\r\n                if (prevAudio()) {\r\n                    history.push(prevAudio());\r\n                    return;\r\n                }\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        for (const audio of document.getElementsByTagName('audio')) {\r\n            audio.playbackRate = vel;\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (currentCase) {\r\n            loadAudios();\r\n            loadData();\r\n        }\r\n        document.addEventListener(\"keyup\", changeAudioSpeed);\r\n\r\n        return () => {\r\n            document.removeEventListener(\"keyup\", changeAudioSpeed);\r\n        }\r\n    }, [currentCase, params]);\r\n\r\n    useEffect(() => {\r\n        setShowSegmentForm(false);\r\n    }, [data])\r\n\r\n    const mergeSegments = () => mergeModalRef.current.showModal();\r\n\r\n    const nextAudio = () => {\r\n        if (!audios || !data) return;\r\n        return audios.length > (findLinksIndex() + 1) ? fixAudioLink(audios[findLinksIndex() + 1]) : null;\r\n    }\r\n\r\n    const prevAudio = () => {\r\n        if (!audios || !data) return;\r\n        return findLinksIndex() > 0 ? fixAudioLink(audios[findLinksIndex() - 1]) : null;\r\n    }\r\n\r\n    const fixAudioLink = (audio) => {\r\n        if (!audios || !data) return;\r\n        return FixPath.fix(BaseUrls.AUDIO_PAGE_VIEW, { caseId: audio.project_id, audioId: audio.id });\r\n    }\r\n\r\n    const findLinksIndex = () => audios.findIndex(audio => audio.id === params.id);\r\n\r\n    return (\r\n        <CaseHeaderContent>\r\n            {data ? (<>\r\n                <div className=\"row middle-xs\">\r\n                    <div className=\"col-xs-8\">\r\n                        <h2>{data.name}</h2>\r\n                    </div>\r\n                    <div className=\"col-xs ta-r\">\r\n                        {prevAudio() ? <Link to={prevAudio()}><Button><u>A</u>nterior</Button></Link> : null}\r\n                        {nextAudio() ? <Link to={nextAudio()}><Button className=\"ml-2\"><u>P</u>róximo</Button></Link> : null}\r\n                    </div>\r\n                </div>\r\n\r\n                {showSegmentForm ? (\r\n                    <AudioTranscriptionSegmentForm audio={data} showSegmentForm={setShowSegmentForm} />\r\n                ) : (<>\r\n\r\n                    {getFullAudio() ? (<>\r\n                        <Card className=\"mt-1 mb-2\" title={<div className=\"row\">\r\n                            <div className=\"col-xs-6\">\r\n                                Áudio completo\r\n                            </div>\r\n                            <div className=\"col-xs-6 ta-r\">\r\n                                <UserRole roles={['admin', 'root']} userId={currentCase?.user_id} >\r\n                                    <Button className=\"mr-1\" type=\"primary\" onClick={() => setShowSegmentForm(true)}>\r\n                                        <Icon icon=\"cut mr-1\" /> Segmentar\r\n                                    </Button>\r\n\r\n                                    <Button className=\"mr-1\" type=\"primary\" onClick={() => mergeSegments()}>\r\n                                        <Icon icon=\"object-group mr-1\" /> Mesclar\r\n                                    </Button>\r\n\r\n                                    <AudioTranscriptionModal ref={mergeModalRef} />\r\n\r\n                                </UserRole>\r\n                            </div>\r\n                        </div>}>\r\n                            <AudioTranscriptionSegment segment={getFullAudio()} />\r\n                        </Card>\r\n                    </>) : null}\r\n\r\n                    {getSegments().length > 0 ? (<>\r\n                        <Divider orientation=\"left\">Segmentos</Divider>\r\n\r\n                        <Collapse>\r\n                            {getSegments().map((data, i) => (\r\n                                <Collapse.Panel\r\n                                    key={data.id} header={`Segmento ${i + 1} - [${Utils.secondsToMinutes(data.start_time)}-${Utils.secondsToMinutes(data.end_time)}]`}\r\n                                >\r\n                                    <AudioTranscriptionSegment segment={data} />\r\n                                </Collapse.Panel>\r\n                            ))}\r\n                        </Collapse>\r\n                    </>) : null}\r\n\r\n                    {getMerges().length > 0 ? (<>\r\n                        <Divider orientation=\"left\">Mesclados</Divider>\r\n\r\n                        <Collapse>\r\n                            {getMerges().map((data, i) => (\r\n                                <Collapse.Panel\r\n                                    key={data.id} header={`Merges ${i + 1} - [${getMergeTimes(data.merge_data)}]`}\r\n                                >\r\n                                    <AudioTranscriptionSegment segment={data} />\r\n                                </Collapse.Panel>\r\n                            ))}\r\n                        </Collapse>\r\n                    </>) : null}\r\n                </>)}\r\n            </>) : <div className=\"ta-c\"><Spin size=\"large\" /></div>}\r\n\r\n        </CaseHeaderContent>\r\n    );\r\n\r\n}","import React from 'react';\r\nimport { List } from 'antd';\r\nimport Icon from '../../atoms/Icon';\r\n\r\nexport default function AudioTranscriptionAnnotation (props) {\r\n\r\n    return (<List.Item key={props.revision.id}\r\n        actions={[\r\n            <a href=\"list-loadmore-edit\"><Icon icon=\"edit\" /></a>, \r\n            <a className=\"color-danger\" href=\"list-loadmore-more\"><Icon icon=\"trash\" /></a>\r\n        ]}\r\n        >\r\n            <List.Item.Meta\r\n                description=\"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est\"\r\n                />\r\n        </List.Item>\r\n    );\r\n}","import React from 'react';\r\nimport HeaderContent from '../../templates/HeaderContent';\r\nimport Icon from '../../components/atoms/Icon';\r\nimport { Button, Divider, Collapse, List } from 'antd';\r\nimport AudioTranscriptionAnnotation from '../../components/molecules/AudioTranscriptionAnnotation';\r\n\r\nexport default function Paraphrase (props) {\r\n\r\n    return (\r\n        <HeaderContent subtitle=\"Projeto de teste\" color=\"HEX\">\r\n\r\n\r\n            <Divider orientation=\"left\">Texto original</Divider>\r\n\r\n            <p className=\"fz-1\">Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est</p>\r\n\r\n            <Divider orientation=\"left\">Paráfrases</Divider>\r\n\r\n            <List\r\n                footer={(\r\n                    <div>\r\n                        <Button className=\"mr-2\" type=\"primary\">\r\n                            <Icon icon=\"plus mr-1\" /> Adicionar paráfrase\r\n                        </Button>\r\n                    </div>\r\n                )}\r\n                dataSource={['','','']}\r\n                renderItem={item => <AudioTranscriptionAnnotation />}\r\n            />\r\n\r\n\r\n        </HeaderContent>\r\n    );\r\n\r\n}","import { configureStore } from '@reduxjs/toolkit'\r\nimport userReducer from './users';\r\nimport caseReducer from './cases';\r\nimport audioTranscriptionReducer from './audioTranscription';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n      user: userReducer,\r\n      case: caseReducer,\r\n      audioTranscription: audioTranscriptionReducer\r\n  }\r\n})","import React from 'react';\r\nimport HeaderForm from '../../templates/HeaderForm';\r\n\r\nexport default function CrudForm (props) {\r\n\r\n    return (\r\n        <HeaderForm {...props} >\r\n        </HeaderForm>\r\n    );\r\n\r\n}","import { Tooltip } from 'antd';\r\nimport React from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { ApiRequest } from '../../../services/apiRequestService';\r\nimport { FixPath } from '../../../services/fixPath';\r\nimport Icon from '../Icon';\r\n\r\nexport function CrudListButton (props) {\r\n\r\n    const params = useParams();\r\n    const {record, path, icon, request, showIf, tip} = props;\r\n\r\n    const postData = async () => {\r\n        await ApiRequest.setUrl(request.path, params, record.id)\r\n                .request(null, request.method, request.data);\r\n        props.onReload();\r\n    };\r\n\r\n    const conditional = () => {\r\n        if(!showIf) return true;\r\n        let show = true;\r\n\r\n        for(const key in showIf) {\r\n            if(record[key] != showIf[key]) \r\n                show = false;\r\n        }\r\n        return show;\r\n    }\r\n\r\n    return (<>{ conditional() ? (<span className=\"mr-2\">\r\n\r\n        { path ? \r\n                <Tooltip title={tip}>\r\n                    <Link \r\n                    to={FixPath.fix(path, params, record.id)}>\r\n                        <Icon icon={icon} />\r\n                    </Link>\r\n                </Tooltip>\r\n            : null }\r\n\r\n        { request ? \r\n                <Tooltip title={tip}>\r\n                    <a onClick={postData}>\r\n                        <Icon icon={icon} />\r\n                    </a>\r\n                </Tooltip>\r\n            : null }\r\n        \r\n    </span>) : null }</>);\r\n}\r\n","import React from 'react';\r\nimport HeaderContent from '../../templates/HeaderContent';\r\nimport { Table, Popconfirm, Divider, Button, message, Tag } from 'antd';\r\nimport Card from '../../components/molecules/Card';\r\nimport Icon from '../../components/atoms/Icon';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { ApiRequest } from '../../services/apiRequestService';\r\nimport { UrlBuilder } from '../../services/urlBuilder/urlBuilder';\r\nimport { FixPath } from '../../services/fixPath';\r\nimport { CrudListButton } from '../../components/atoms/CrudListButton';\r\nimport UserRole from '../../components/atoms/UserRole';\r\nimport { useSelector } from 'react-redux';\r\nimport AudioRevisionsCount from '../../components/atoms/AudioRevisionsCount';\r\n\r\nexport default function CrudList(props) {\r\n\r\n  const { formData } = props;\r\n  const [dataSource, setDataSource] = useState([]);\r\n  const [columns, setColumns] = useState([]);\r\n  const params = useParams();\r\n  const currentCase = useSelector(state => state.case.currentCase);\r\n\r\n  const listComponents = (component, props) => {\r\n    switch (component) {\r\n      case \"AudioRevisionsCount\":\r\n        return <AudioRevisionsCount data={props} />\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  const baseUrl = () => {\r\n    let url = new UrlBuilder(formData.baseRoute).get();\r\n    return FixPath.fix(url, params);\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n    loadColumns();\r\n  }, []);\r\n\r\n  const renderCel = (label, record, field) => {\r\n    switch (field.type) {\r\n      case \"switch\":\r\n        return label ? <Tag color=\"green\">Sim</Tag> : <Tag color=\"red\">Não</Tag>;\r\n      default:\r\n        return field.link ? <Link to={FixPath.fix(field.link, params, record.id)}>{label}</Link> : label;\r\n    }\r\n  }\r\n\r\n  const additionalButtons = (record) => {\r\n    let buttons = [];\r\n    formData.list?.includeButtons?.forEach(button => {\r\n      buttons.push(<CrudListButton {...button} record={record} onReload={loadData} />)\r\n    })\r\n    return buttons;\r\n  }\r\n\r\n  const loadColumns = () => {\r\n    const formFields = formData.form\r\n      .filter(field => field.showInTable)\r\n      .map(field => ({\r\n        title: field.label,\r\n        key: field.name,\r\n        dataIndex: field.name,\r\n        render: (label, record) => renderCel(label, record, field)\r\n      }));\r\n\r\n    if (formData.list.includeColumns) {\r\n      for (const c of formData.list.includeColumns) {\r\n        formFields.push({\r\n          title: c.title,\r\n          key: c.key,\r\n          width: c.width,\r\n          render: (label, record) => listComponents(c.component, record)\r\n        })\r\n      }\r\n    }\r\n\r\n    const actions = {\r\n      title: 'Ação',\r\n      key: 'action',\r\n      width: 130,\r\n      render: (text, record) => (\r\n        <div className=\"ta-c\">\r\n          {additionalButtons(record)}\r\n\r\n          <UserRole roles={formData.roles} userId={currentCase?.user_id} >\r\n            <Link to={`/${FixPath.fix(formData.path, params)}${record.id}`} className=\"mr-2\"><Icon icon=\"edit\" /></Link>\r\n            <Popconfirm\r\n              title={`Você deseja realmente remover este item?`}\r\n              onConfirm={(e) => deleteItem(record)}\r\n              okText=\"Sim\"\r\n              cancelText=\"Não\"\r\n            >\r\n              <a href=\"#\" className=\"color-danger\"><Icon icon=\"trash\" /></a>\r\n            </Popconfirm>\r\n          </UserRole>\r\n        </div>\r\n      ),\r\n    };\r\n    formFields.push(actions);\r\n    setColumns(formFields);\r\n  }\r\n\r\n  const deleteItem = async (data) => {\r\n    try {\r\n      await ApiRequest.delete(baseUrl() + data.id);\r\n      loadData();\r\n    } catch {\r\n      message.error(\"Não foi possível remover o item desejado\");\r\n    }\r\n  }\r\n\r\n  const loadData = async () => {\r\n    try {\r\n      const data = await ApiRequest.get(baseUrl());\r\n      setDataSource(data);\r\n    } catch {\r\n      message.error(\"Não foi possível recuperar os dados solicitados\", 5);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <HeaderContent subtitle={formData.title}>\r\n\r\n      <Card title={formData.listTitle} icon={formData.icon}>\r\n        <Table dataSource={dataSource} columns={columns} />\r\n        <UserRole roles={formData.roles} userId={currentCase?.user_id} >\r\n          <Divider />\r\n          <div className=\"ta-c\">\r\n            <Link to={`/${FixPath.fix(formData.path, params)}${formData.registerPathSuffix || 'new'}`}>\r\n              <Button type=\"primary\">\r\n                {formData.registerLabel ?\r\n                  formData.registerLabel :\r\n                  `Cadastrar ${formData.singularName}`\r\n                }\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        </UserRole>\r\n      </Card>\r\n\r\n    </HeaderContent>\r\n  );\r\n\r\n}","import { Button, Result } from 'antd';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport VerticalCenter from '../../templates/VerticalCenter';\r\n\r\nexport default function RegisterSuccess (props) {\r\n\r\n    return (\r\n        <VerticalCenter>\r\n            <Result\r\n                status=\"success\"\r\n                title=\"Cadastro realizado com sucesso\"\r\n                subTitle=\"Seu cadastro encontra-se em aprovação. Solicite ao administrador do sistema a ativação do seu cadastro.\"\r\n                extra={[<Link to=\"/login\"><Button>Voltar à tela inicial</Button></Link>]}\r\n            />\r\n        </VerticalCenter>\r\n    );\r\n\r\n}","import { Card, Divider, List, Select, message } from 'antd';\r\nimport React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport UserAvatar from '../../../components/atoms/Avatar';\r\nimport { ApiRequest } from '../../../services/apiRequestService';\r\nimport CaseHeaderContent from '../../../templates/CaseHeaderContent';\r\nimport BaseUrls from '../../../utils/baseUrls';\r\nimport { fetchCaseById } from '../../../reducers/cases';\r\nimport _ from \"lodash\";\r\nimport Icon from '../../../components/atoms/Icon';\r\n\r\nexport default function CaseAddUser (props) {\r\n\r\n    const [options, setOptions] = useState([]);\r\n    const currentCase = useSelector(state => state.case.currentCase);\r\n    const param = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n    const map = (opt) => ({ label: opt.name, value: opt.id})\r\n\r\n    const filteredOptions = () => _.differenceBy(options, currentCase?.users.map(map), 'value');\r\n\r\n    const loadAllUsers = async () => {\r\n        const data = await ApiRequest.setUrl(BaseUrls.USERS, {}).get();\r\n        setOptions( data.map(map));\r\n    }\r\n\r\n    const onChange = (value) => {\r\n        addUser(value.value);\r\n    }\r\n\r\n    const addUser = async (userId) => {\r\n        await ApiRequest.setUrl(BaseUrls.PROJECT_USER, {projectId: param.projectId, userId}).post(null, null);\r\n        dispatch(fetchCaseById(param.projectId));\r\n        message.success(\"Usuário vinculado com sucesso!\", 5);\r\n    }\r\n\r\n    const removeUser = async (userId) => {\r\n        await ApiRequest.setUrl(BaseUrls.PROJECT_USER, {projectId: param.projectId, userId}).delete(null);\r\n        dispatch(fetchCaseById(param.projectId));\r\n        message.success(\"Usuário desvinculado com sucesso!\", 5);\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadAllUsers();\r\n    }, [])\r\n\r\n    return (\r\n        <CaseHeaderContent>\r\n            <div className=\"row center-xs\">\r\n                <div className=\"col-xs-12 col-md-6 ta-l\">\r\n                    <Card title=\"Vincular usuários\" icon=\"users\">\r\n                        <Select\r\n                            style={{ width: '100%' }}\r\n                            labelInValue\r\n                            filterOption={false}\r\n                            options={filteredOptions()}\r\n                            onChange={onChange}\r\n                            />\r\n                        <Divider orientation=\"left\">Usuários vinculados</Divider>\r\n                        \r\n                        <List \r\n                            itemLayout=\"horizontal\"\r\n                            dataSource={currentCase?.users}\r\n                            renderItem={item => (\r\n                              <List.Item\r\n                                actions={[\r\n                                    <a onClick={() => removeUser(item.id)} className=\"color-danger\"><Icon icon=\"trash\" /></a>\r\n                                ]}\r\n                              >\r\n                                <List.Item.Meta\r\n                                  avatar={<UserAvatar user={item} />}\r\n                                  title={item.name}\r\n                                />\r\n                              </List.Item>\r\n                            )}\r\n                        />\r\n\r\n                    </Card>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </CaseHeaderContent>\r\n    );\r\n\r\n}","import React from 'react';\r\nimport { CardContent } from '../../atoms/Card'\r\nimport './styles.scss'\r\n\r\nexport default function Card (props) {\r\n\r\n    return (\r\n        <div className=\"card card-button card-icon-button\">\r\n            <CardContent>\r\n                <div className=\"icon\"><i className=\"fas fa-plus\"></i></div>\r\n                <div className=\"label\">{props.label}</div>\r\n            </CardContent>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { CardContent, CardTitle } from '../../atoms/Card'\r\nimport Label from '../../atoms/Label'\r\nimport UserRole from '../../atoms/UserRole'\r\nimport { Avatar, Badge, Menu, Popconfirm } from 'antd';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport UserAvatar from '../../atoms/Avatar';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteCaseById, fetchCases } from '../../../reducers/cases';\r\n\r\nexport default function Card (props) {\r\n    const { data } = props;\r\n    const isEnabled = (feature) => data[`has_${feature}`];\r\n    const dispatch = useDispatch();\r\n\r\n    const deleteCase = () => {\r\n        dispatch(deleteCaseById(data.id)).then(()=>{\r\n            dispatch(fetchCases());\r\n        })\r\n    }\r\n\r\n    const history = useHistory();\r\n\r\n    const viewCase = () => {\r\n        console.log(`/case/${data.id}/detail`);\r\n        history.push(`/case/${data.id}/detail`);\r\n    }\r\n\r\n    const menu = (\r\n        <Menu>\r\n            <UserRole roles={['root']} userId={data.user_id}>\r\n                <Link to={`/case/${data.id}/users`}>\r\n                    <Menu.Item>\r\n                        Vincular Usuários\r\n                    </Menu.Item>\r\n                </Link>\r\n                <Link to={`/case/${data.id}`}>\r\n                    <Menu.Item>\r\n                        Editar caso\r\n                    </Menu.Item>\r\n                </Link>\r\n                <Popconfirm\r\n                    title={`Você deseja realmente remover este item?`}\r\n                    onConfirm={(e) => deleteCase()}\r\n                    okText=\"Sim\"\r\n                    cancelText=\"Não\"\r\n                    >\r\n                    <Menu.Item>\r\n                        Deletar caso\r\n                    </Menu.Item>\r\n                </Popconfirm>\r\n            </UserRole>\r\n        </Menu>\r\n    )\r\n\r\n    return (\r\n        <div className=\"card card-button\">\r\n            <CardTitle onClick={viewCase} title={data.name} icon={data.icon} color={data.color} menu={menu} />\r\n            <Badge count={!data.open ? \"Caso fechado\" : null}>\r\n                <CardContent onClick={viewCase}>\r\n                    <Label>Funcionalidades</Label>\r\n                    <ul className=\"fa-ul\">\r\n                        <li className={ !isEnabled('audio_transcription') ? 'disabled' : '' }><span className=\"fa-li\"><i className=\"fas fa-file-audio\"></i></span>Transcrição de Áudio</li>\r\n                        <li className={ !isEnabled('entities_detection') ? 'disabled' : '' }><span className=\"fa-li\"><i className=\"fas fa-tags\"></i></span>Detecção de Entidades</li>\r\n                        <li className={ !isEnabled('paraphrases') ? 'disabled' : '' }><span className=\"fa-li\"><i className=\"fas fa-quote-left\"></i></span>Paráfrases</li>\r\n                    </ul>\r\n\r\n                    <Label>Usuários</Label>\r\n                    { data.users.length ? \"\" : (<em>Nenhum usuário vinculado</em>) }\r\n                    <Avatar.Group maxCount=\"10\">\r\n                        { data.users.map( user => <UserAvatar key={user.id} size=\"small\" user={user} tooltip={true} /> )}\r\n                    </Avatar.Group>\r\n                </CardContent>\r\n            </Badge>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function NotAdmin (props) {\r\n\r\n    const currentUser = useSelector(state => state.user.data);\r\n\r\n    const isAdmin = () => currentUser && currentUser.role===\"admin\";\r\n\r\n    return (<>\r\n        { !isAdmin() ? props.children : null }\r\n    </>);\r\n}","import React from 'react';\r\nimport HeaderContent from '../../../templates/HeaderContent';\r\nimport CardButton from '../../../components/molecules/CardButton';\r\nimport CaseCard from '../../../components/molecules/CaseCard';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { fetchCases, setCase } from '../../../reducers/cases';\r\nimport UserRoles from '../../../components/atoms/UserRole';\r\nimport NotAdmin from '../../../components/atoms/NotAdmin';\r\nimport { Empty } from 'antd';\r\n\r\nexport default function CaseList (props) {\r\n    \r\n    const caseList = useSelector((state) => state.case.caseList );\r\n    const dispatch = useDispatch();\r\n\r\n    useState(() => {\r\n        dispatch(setCase(null));\r\n        dispatch(fetchCases());\r\n    }, []);\r\n\r\n    return (\r\n        <HeaderContent subtitle=\"Casos\">\r\n            <div className=\"row\">\r\n                { (caseList && caseList.length==0) ? (\r\n                    <NotAdmin>\r\n                        <Empty description=\"Você ainda não foi designado para nenhum caso. Entre em contato com os administradores do projeto\" ></Empty>\r\n                    </NotAdmin>\r\n                ) : null }\r\n                <UserRoles roles={['admin', 'root']}>\r\n                    <div className=\"col-xs-12 col-md-3 mb-1\">\r\n                        <Link to=\"/case/new\">\r\n                            <CardButton icon=\"plus\" label=\"Novo Caso\" />\r\n                        </Link>\r\n                    </div>\r\n                </UserRoles>\r\n                { caseList?.map(el => (\r\n                    <div className=\"col-xs-12 col-md-3 mb-1\">\r\n                        <CaseCard data={el} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </HeaderContent>\r\n    );\r\n\r\n}","import { Card, Divider, List, Select, message } from 'antd';\r\nimport React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport UserAvatar from '../../../components/atoms/Avatar';\r\nimport { ApiRequest } from '../../../services/apiRequestService';\r\nimport CaseHeaderContent from '../../../templates/CaseHeaderContent';\r\nimport BaseUrls from '../../../utils/baseUrls';\r\nimport { fetchCaseById } from '../../../reducers/cases';\r\nimport _ from \"lodash\";\r\nimport Icon from '../../../components/atoms/Icon';\r\nimport HeaderContent from '../../../templates/HeaderContent';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport { ColorService } from '../../../services/colorService';\r\n\r\nexport default function UserAddCase (props) {\r\n\r\n    const [options, setOptions] = useState([]);\r\n    const [currentUser, setCurrentUser] = useState();\r\n    const param = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n    const map = (opt) => ({ label: opt.name, value: opt.id})\r\n\r\n    const filteredOptions = () => _.differenceBy(options, currentUser?.projects.map(map), 'value');\r\n    const canRemove = (caseId) => _.intersectionBy(options, currentUser?.projects.map(map), 'value').some(project => project.value===caseId);\r\n\r\n    const loadCurrentUser = async () => {\r\n        const data = await ApiRequest.setUrl(BaseUrls.USER, param).get();\r\n        setCurrentUser(data);\r\n    }\r\n\r\n    const loadAllProjects = async () => {\r\n        const data = await ApiRequest.setUrl(BaseUrls.PROJECTS, {}).get();\r\n        setOptions( data.map(map));\r\n    }\r\n\r\n    const onChange = (value) => {\r\n        addUser(value.value);\r\n    }\r\n\r\n    const addUser = async (projectId) => {\r\n        await ApiRequest.setUrl(BaseUrls.PROJECT_USER, {userId: param.userId, projectId}).post(null, null);\r\n        loadCurrentUser();\r\n        message.success(\"Caso vinculado com sucesso!\", 5);\r\n    }\r\n\r\n    const removeUser = async (projectId) => {\r\n        await ApiRequest.setUrl(BaseUrls.PROJECT_USER, {userId: param.userId, projectId}).delete(null);\r\n        loadCurrentUser();\r\n        message.success(\"Caso desvinculado com sucesso!\", 5);\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadCurrentUser();\r\n        loadAllProjects();\r\n    }, [])\r\n\r\n    return (\r\n        <HeaderContent subtitle=\"Casos do usuário\">\r\n            <div className=\"row center-xs\">\r\n                <div className=\"col-xs-12 col-md-6 ta-l\">\r\n                    <Card title={`Vincular casos ao usuário ${currentUser?.name}`} icon=\"folder\">\r\n                        <Select\r\n                            style={{ width: '100%' }}\r\n                            labelInValue\r\n                            filterOption={false}\r\n                            options={filteredOptions()}\r\n                            onChange={onChange}\r\n                            />\r\n                        <Divider orientation=\"left\">Casos vinculados</Divider>\r\n                        \r\n                        <List \r\n                            itemLayout=\"horizontal\"\r\n                            dataSource={currentUser?.projects}\r\n                            renderItem={item => (\r\n                              <List.Item\r\n                                actions={[\r\n                                    canRemove(item.id) ? <a onClick={() => removeUser(item.id)} className=\"color-danger\"><Icon icon=\"trash\" /></a> : null\r\n                                ]}\r\n                              >\r\n                                <List.Item.Meta\r\n                                  avatar={<Avatar style={{backgroundColor: ColorService.getColor(item.color)}}><Icon color={item.color} icon={item.icon} /></Avatar>}\r\n                                  title={item.name}\r\n                                />\r\n                              </List.Item>\r\n                            )}\r\n                        />\r\n\r\n                    </Card>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </HeaderContent>\r\n    );\r\n\r\n}","import React from 'react';\r\nimport CaseHeaderContent from '../../../templates/CaseHeaderContent';\r\nimport Card from '../../../components/molecules/Card';\r\nimport { Button, Input, Select, Spin, Steps } from 'antd';\r\nimport { UploadUrlBuilder } from '../../../services/urlBuilder/uploadUrlBuilder';\r\nimport { ApiRequest } from '../../../services/apiRequestService';\r\nimport Dragger from 'antd/lib/upload/Dragger';\r\nimport { InboxOutlined } from '@ant-design/icons';\r\nimport { useState } from 'react';\r\nimport './index.scss';\r\nimport AudioPlayer from '../../../components/atoms/AudioPlayer';\r\nimport If from '../../../components/atoms/If';\r\nimport BaseUrls from '../../../utils/baseUrls';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nconst { Step } = Steps;\r\n\r\nconst fixFileName = (name) => name.replace(/\\.[^/.]+$/, \"\").replace(/_/g, ' ').replace(/-/g, ' ');\r\nconst removeFileNameExt = (name) => name.replace(/\\.[^/.]+$/, \"\");\r\n\r\nconst mapFileList = (fileList) => {\r\n    return fileList.filter(file => file.response && file.type.indexOf('audio')>=0).map(file => ({\r\n        name: fixFileName(file.name), \r\n        file: file.response.url,\r\n        txt: findTxt(fileList, file.name)\r\n    }))\r\n}\r\n\r\nconst findTxt = (fileList, filename) => {\r\n    const file = mapTxt(fileList)\r\n        .find(file => removeFileNameExt(filename)===removeFileNameExt(file.name))?.file;\r\n    return file || \"\";\r\n}\r\n\r\nconst mapTxt = (fileList) => {\r\n    return fileList\r\n        .filter(file => file.response && file.type.indexOf('text')>=0)\r\n        .map(file => ({name: file.name, file: file.response.url}))\r\n}\r\n\r\nexport function SelectFiles(props) {\r\n\r\n    return (\r\n        <Dragger \r\n            accept=\"audio/*,.txt\"\r\n            action={new UploadUrlBuilder().get()} \r\n            headers={ ApiRequest.headers }\r\n            multiple={ true }\r\n            onChange = {(info) => {\r\n                props.setFiles(mapFileList(info.fileList));\r\n                props.setFilesTxt(mapTxt(info.fileList));\r\n            }}\r\n            {...props}>\r\n                <p className=\"ant-upload-drag-icon\">\r\n                <InboxOutlined />\r\n                </p>\r\n                <p className=\"ant-upload-text\">Clique ou arraste arquivos para esta área para fazer o upload</p>\r\n                <p className=\"ant-upload-hint\">\r\n                    Você pode enviar um ou mais arquivos.\r\n                </p>\r\n        </Dragger>\r\n    )\r\n}\r\n\r\nexport function FilesForm(props) {\r\n\r\n    const {files, filesTxt, setFiles} = props;\r\n    \r\n    const handleFileName = (ev, i) => {\r\n        let f = [...files];\r\n        f[i].name = ev.target.value;\r\n        setFiles(f);\r\n    }\r\n\r\n    const handleTxt = (ev, i) => {\r\n        let f = [...files];\r\n        f[i].txt = ev;\r\n        setFiles(f);\r\n    }\r\n\r\n    return (<>\r\n        { files.map((file, index) => (<div className=\"row middle-xs list-item\">\r\n        <div className=\"col-md-4\">\r\n                <AudioPlayer file={file.file} />\r\n            </div>\r\n            <div className=\"col-md\">\r\n                <Input onChange={(ev) => handleFileName(ev, index)} placeholder=\"Nome do arquivo\" value={file.name} />\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n                <Select onChange={(ev) => handleTxt(ev, index)} value={file.txt}>\r\n                    <Select.Option value=\"\">- Nenhum -</Select.Option>\r\n                    { filesTxt.map(txt => <Select.Option value={txt.file}>{txt.name}</Select.Option>) }\r\n                </Select>\r\n            </div>\r\n        </div> )) }\r\n    </>)\r\n}\r\n\r\nexport default function AudioTranscriptionAddFiles (props) {\r\n\r\n    const [files, setFiles] = useState([]);\r\n    const [filesTxt, setFilesTxt] = useState([]);\r\n    const [sending, setSending] = useState(false);\r\n    const [currentStep, setCurrentStep] = useState(0);\r\n    const stepsLength = 2;\r\n    const params = useParams();\r\n    const history = useHistory();\r\n\r\n    const handleVisibility = (i) => currentStep!==i ? 'd-n' : '';\r\n\r\n    const sendFiles = async () => {\r\n        setSending(true);\r\n        files.forEach(async (file) => { \r\n            await ApiRequest.setUrl(BaseUrls.AUDIO_TRANSCRIPTION_UPLOAD, params).post(null, file);\r\n        });\r\n        setTimeout(() => {\r\n            history.push(`/case/${params.projectId}/audio-transcription`);\r\n            setSending(false);\r\n        }, 1000)\r\n    }\r\n\r\n    return (\r\n        <CaseHeaderContent>\r\n\r\n            <Card title=\"Inserir novos arquivos de áudio\" icon=\"upload\">\r\n                <Steps current={currentStep}>\r\n                    <Step title=\"Selecionar arquivos\" />\r\n                    <Step title=\"Cadastrar arquivos\" />\r\n                </Steps>\r\n\r\n                <div className=\"mt-2 mb-1\">\r\n                    <div className={handleVisibility(0)}>\r\n                        <SelectFiles files={files} setFiles={setFiles} filesTxt={filesTxt} setFilesTxt={setFilesTxt} {...props} />\r\n                    </div>\r\n                    <div className={handleVisibility(1)}>\r\n                        <FilesForm files={files} filesTxt={filesTxt} setFiles={setFiles} {...props} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <If condition={currentStep>0}>\r\n                        <div className=\"col-xs\">\r\n                            <Button onClick={() => setCurrentStep(currentStep-1)} type=\"default\">Voltar</Button>\r\n                        </div>\r\n                    </If>\r\n                    <If condition={currentStep<stepsLength-1}>\r\n                        <div className=\"col-xs ta-r\">\r\n                            <Button disabled={files.length==0} onClick={() => setCurrentStep(currentStep+1)} type=\"primary\">Avançar</Button>\r\n                        </div>\r\n                    </If>\r\n                    <If condition={currentStep===stepsLength-1}>\r\n                        <div className=\"col-xs ta-r\">\r\n                            <Button disabled={sending} onClick={sendFiles} type=\"primary\">{ sending ? <Spin /> : \"Salvar\" }</Button>\r\n                        </div>\r\n                    </If>\r\n                </div>\r\n\r\n            </Card>\r\n\r\n        </CaseHeaderContent>\r\n    );\r\n\r\n}","import { Button, Card, Form, Spin, Switch } from 'antd';\r\nimport React from 'react';\r\nimport CaseHeaderContent from '../../../templates/CaseHeaderContent';\r\nimport Icon from '../../../components/atoms/Icon';\r\nimport { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { ApiRequest } from '../../../services/apiRequestService';\r\nimport BaseUrls from '../../../utils/baseUrls';\r\n\r\nexport default function AudioTranscriptionExport(props) {\r\n\r\n    const [sending, setSending] = useState(false);\r\n    const [form] = Form.useForm();\r\n    const params = useParams();\r\n\r\n    const onFinish = async (values) => {\r\n        setSending(true);\r\n        const zip = await ApiRequest.setUrl(BaseUrls.AUDIO_TRANSCRIPTION_EXPORT, params).get();\r\n        var a = document.createElement(\"a\"); //Create <a>\r\n        a.href = \"data:image/png;base64,\" + zip.data; //Image Base64 Goes here\r\n        a.download = zip.filename; //File name Here\r\n        a.click();\r\n        setSending(false);\r\n    };\r\n\r\n    return (\r\n        <CaseHeaderContent>\r\n\r\n            <div className=\"row center-xs\">\r\n                <div className=\"col-xs-12 col-md-6 ta-l\">\r\n                    <Card\r\n                        title=\"Exportar\"\r\n                        actions={[\r\n                            <Button disabled={sending} onClick={() => form.submit() } type=\"primary\">\r\n                                { !sending ? <>\r\n                                    <Icon icon=\"file-export\" />&nbsp;Exportar\r\n                                </> : <Spin /> }\r\n                            </Button>\r\n                        ]}\r\n                    >\r\n                        <Form\r\n                            form={form}\r\n                            labelCol={{ span: 10 }}\r\n                            wrapperCol={{ span: 14 }}\r\n                            onFinish={onFinish}\r\n                        >\r\n\r\n                            <Form.Item\r\n                                label=\"Apenas transcrições aprovadas\"\r\n                                name=\"only_approved_revisions\"\r\n                                valuePropName=\"checked\"\r\n                            >\r\n                                <Switch />\r\n                            </Form.Item>\r\n\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n\r\n        </CaseHeaderContent>\r\n    );\r\n\r\n}","import './App.scss';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\n\nimport CaseDetail from './pages/Case/Detail';\n\nimport EntityDetectionAnnotation from './pages/EntityDetection/Annotations';\nimport EntityDetectionImport from './pages/EntityDetection/Import';\nimport EntityDetectionEntities from './pages/EntityDetection/Entities/List';\nimport EntityDetectionEntitiesForm from './pages/EntityDetection/Entities/Form';\n\nimport AudioTranscription from './pages/AudioTranscription/View';\nimport Paraphrase from './pages/Paraphrase';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useHistory,\n} from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport store from './reducers/store';\nimport { fetchUser } from './reducers/users'\nimport React, { useEffect } from 'react';\nimport { ApiRequest } from './services/apiRequestService';\nimport CrudForm from './pages/Crud/CrudForm';\n\nimport CrudList from './pages/Crud/CrudList';\n\nimport userForm from './data/form/user.json';\nimport caseForm from './data/form/case.json';\nimport audioTranscriptionForm from './data/form/audio-transcription.json';\nimport RegisterSuccess from './pages/Register/success';\nimport CaseAddUser from './pages/Case/AddUser';\nimport CaseList from './pages/Case/List';\nimport UserAddCase from './pages/User/AddCase';\nimport AudioTranscriptionAddFiles from './pages/AudioTranscription/AddFiles';\nimport AudioTranscriptionExport from './pages/AudioTranscription/Export';\n\nfunction AppWrapper() {\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Routes />\n      </Router>\n    </Provider>\n  );\n}\n\nfunction Routes() {\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if(ApiRequest.token) {\n      store.dispatch(fetchUser());\n    } else {\n      history.replace(\"/login\");\n    }\n  }, []);\n\n  const crudRoutes = (prefix, props) => {\n    return [\n        <Route exact={true} path={`${prefix}/new`}>\n          <CrudForm {...props} />\n        </Route>,\n        <Route exact={true} path={`${prefix}/:id`}>\n          <CrudForm {...props} editing={true} />\n        </Route>,\n        <Route exact={true} path={`${prefix}`}>\n          <CrudList {...props} />\n        </Route>\n    ]\n  }\n\n  return (\n\n    <Switch>\n\n      { crudRoutes(\"/user\", { formData: userForm }) }\n\n      <Route path=\"/user/:userId/cases\">\n        <UserAddCase />\n      </Route>\n\n      { crudRoutes(\"/case\", { formData: caseForm }) }\n\n      <Route path=\"/case/:projectId/detail\">\n        <CaseDetail />\n      </Route>\n\n      <Route path=\"/case/:projectId/users\">\n        <CaseAddUser />\n      </Route>\n\n      <Route path=\"/case/:projectId/audio-transcription/addFiles\">\n        <AudioTranscriptionAddFiles />\n      </Route>\n\n      <Route path=\"/case/:projectId/audio-transcription/export\">\n        <AudioTranscriptionExport />\n      </Route>\n\n      { crudRoutes(\"/case/:projectId/audio-transcription\", { formData: audioTranscriptionForm }) }\n\n      <Route path=\"/case/:projectId/audio-transcription/:id/view\">\n        <AudioTranscription />\n      </Route>\n\n      <Route path=\"/entity-detection/import\">\n        <EntityDetectionImport />\n      </Route>\n\n      <Route path=\"/entity-detection/entities/new\">\n        <EntityDetectionEntitiesForm />\n      </Route>\n\n      <Route path=\"/entity-detection/entities\">\n        <EntityDetectionEntities />\n      </Route>\n\n      <Route path=\"/entity-detection/:entityId\">\n        <EntityDetectionAnnotation />\n      </Route>\n\n      <Route path=\"/paraphrase/:entityId\">\n        <Paraphrase />\n      </Route>\n\n      <Route path=\"/login\">\n        <Login />\n      </Route>\n\n      <Route path=\"/register/success\">\n        <RegisterSuccess />\n      </Route>\n\n      <Route path=\"/register\">\n        <Register />\n      </Route>\n\n      <Route path=\"/\">\n        <CaseList />\n      </Route>\n      \n    </Switch>\n  )\n}\n\nexport default AppWrapper;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}